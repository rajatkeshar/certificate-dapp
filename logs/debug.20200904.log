2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:25:21+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:25:21+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:25:21+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:25:21+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:25:21+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:25:21+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:25:21+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:25:21+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:25:21+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78347
2020-09-04T02:25:21+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78347 and "blocks"."_deleted_" = 0; [ [ '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
    '132058080',
    '78347',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'e16cd0777dd232bdb60cc80f487c31415257c8486824d97f9f8cd5d28090a615',
    '8807421d94e066f15fb8fd9b722167a18ba5bf10a87905ea35c143c8ef5c6a36',
    '79268',
    '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
    'ebac7a16027a6db22b83075040efe72eb05e38933d05d3ec29951adf0e9a6d0fe420b278b73bc58b45d85e30b79550d5ef61a771ddf62f05b4b296b24ad74a04',
    '0' ] ]
2020-09-04T02:25:21+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  timestamp: 132058080,
  height: 78347,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'e16cd0777dd232bdb60cc80f487c31415257c8486824d97f9f8cd5d28090a615',
  pointId: '8807421d94e066f15fb8fd9b722167a18ba5bf10a87905ea35c143c8ef5c6a36',
  pointHeight: 79268,
  delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  signature: 'ebac7a16027a6db22b83075040efe72eb05e38933d05d3ec29951adf0e9a6d0fe420b278b73bc58b45d85e30b79550d5ef61a771ddf62f05b4b296b24ad74a04',
  count: 0 }
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:25:21+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:25:21+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:25:21+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:25:21+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79270 }
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:25:21+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:25:21+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:25:21+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:25:21+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:25:21+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:26:07+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:26:07+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:26:07+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:26:07+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:26:07+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:26:07+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:26:07+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:26:07+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:26:07+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78347
2020-09-04T02:26:07+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78347 and "blocks"."_deleted_" = 0; [ [ '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
    '132058080',
    '78347',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'e16cd0777dd232bdb60cc80f487c31415257c8486824d97f9f8cd5d28090a615',
    '8807421d94e066f15fb8fd9b722167a18ba5bf10a87905ea35c143c8ef5c6a36',
    '79268',
    '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
    'ebac7a16027a6db22b83075040efe72eb05e38933d05d3ec29951adf0e9a6d0fe420b278b73bc58b45d85e30b79550d5ef61a771ddf62f05b4b296b24ad74a04',
    '0' ] ]
2020-09-04T02:26:07+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  timestamp: 132058080,
  height: 78347,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'e16cd0777dd232bdb60cc80f487c31415257c8486824d97f9f8cd5d28090a615',
  pointId: '8807421d94e066f15fb8fd9b722167a18ba5bf10a87905ea35c143c8ef5c6a36',
  pointHeight: 79268,
  delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  signature: 'ebac7a16027a6db22b83075040efe72eb05e38933d05d3ec29951adf0e9a6d0fe420b278b73bc58b45d85e30b79550d5ef61a771ddf62f05b4b296b24ad74a04',
  count: 0 }
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:26:07+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:26:07+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:26:07+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:26:07+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79270 }
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:26:07+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:26:07+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:26:07+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:26:07+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:26:07+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:26:10+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d","timestamp":132058080,"height":78347,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"e16cd0777dd232bdb60cc80f487c31415257c8486824d97f9f8cd5d28090a615","pointId":"8807421d94e066f15fb8fd9b722167a18ba5bf10a87905ea35c143c8ef5c6a36","pointHeight":79268,"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","signature":"ebac7a16027a6db22b83075040efe72eb05e38933d05d3ec29951adf0e9a6d0fe420b278b73bc58b45d85e30b79550d5ef61a771ddf62f05b4b296b24ad74a04","count":0}, event = {"topic":"point","message":{"id":"e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e","height":79271}}
2020-09-04T02:26:10+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T02:26:10+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:26:10+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:26:10+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:26:10+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:26:10+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:26:10+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:26:10+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:26:10+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78348,
  prevBlockId: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  pointId: 'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
  timestamp: 132108960,
  pointHeight: 79271,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
  id: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3' } { local: true,
  broadcast: true,
  votes: 
   { height: 78348,
     id: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:26:10+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78348
2020-09-04T02:26:10+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:26:10+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:26:10+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:26:10+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78348, '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d', 'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e', 132108960, 79271, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401', '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3');
2020-09-04T02:26:10+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:26:10+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:26:10+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78348,
  prevBlockId: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  pointId: 'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
  timestamp: 132108960,
  pointHeight: 79271,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
  id: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3' }
2020-09-04T02:26:10+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3 height: 78348
2020-09-04T02:26:10+0530 <info> round.js:66 () New dapp block id: 25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3 height: 78348 via point: 79271
2020-09-04T02:26:10+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:31:24+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:31:24+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:31:25+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:31:25+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:31:25+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:31:25+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:31:25+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:31:25+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:31:25+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:31:25+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:31:25+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:31:25+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:31:25+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:31:25+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78348
2020-09-04T02:31:25+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78348 and "blocks"."_deleted_" = 0; [ [ '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
    '132108960',
    '78348',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
    'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
    '79271',
    'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
    '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
    '0' ] ]
2020-09-04T02:31:25+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
  timestamp: 132108960,
  height: 78348,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  pointId: 'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
  pointHeight: 79271,
  delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  signature: '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
  count: 0 }
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:31:25+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:31:25+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:31:25+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:31:25+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79272 }
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:31:25+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:31:25+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:31:25+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:31:25+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:31:25+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:35:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:35:32+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:35:33+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:35:33+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:35:33+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:35:33+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:35:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:35:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:35:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:35:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:35:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:35:33+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:35:33+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:35:33+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78348
2020-09-04T02:35:33+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78348 and "blocks"."_deleted_" = 0; [ [ '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
    '132108960',
    '78348',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
    'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
    '79271',
    'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
    '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
    '0' ] ]
2020-09-04T02:35:33+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
  timestamp: 132108960,
  height: 78348,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  pointId: 'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
  pointHeight: 79271,
  delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  signature: '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
  count: 0 }
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:35:33+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:35:33+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:35:33+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:35:33+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79273 }
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:35:33+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:35:33+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:35:33+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:35:33+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:35:33+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:35:43+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T02:35:43+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79273 }
2020-09-04T02:35:43+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T02:35:43+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:35:43+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T02:35:43+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T02:35:43+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:37:05+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:37:05+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:37:06+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:37:06+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:37:06+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:37:06+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:37:06+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:37:06+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:37:06+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:37:06+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:37:06+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:37:06+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:37:06+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:37:06+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78348
2020-09-04T02:37:06+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78348 and "blocks"."_deleted_" = 0; [ [ '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
    '132108960',
    '78348',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
    'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
    '79271',
    'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
    '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
    '0' ] ]
2020-09-04T02:37:06+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
  timestamp: 132108960,
  height: 78348,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d',
  pointId: 'e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e',
  pointHeight: 79271,
  delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  signature: '08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401',
  count: 0 }
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:37:06+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:37:06+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:37:06+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:37:06+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79273 }
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:37:06+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:37:06+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:37:06+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:37:06+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:37:06+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:37:10+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3","timestamp":132108960,"height":78348,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"50a259d2df89b5e6931bab2403a62bb52f1896139e77d963674ed13bc8efd91d","pointId":"e2272ab26d0bf4386a18bdb24632197d140c20dec0e990b1b5768b1bee1ef08e","pointHeight":79271,"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","signature":"08c6795d3e9e495b94c91e9c96ca10d6f5bfd411e73cf53e857237db5660e9ce14fab300ff38eced35fb5b72dc9a47a296b0c4f9b8fdba4dc0bd98674f699401","count":0}, event = {"topic":"point","message":{"id":"1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881","height":79274}}
2020-09-04T02:37:10+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T02:37:10+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:37:10+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:37:10+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:37:10+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:37:10+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:37:10+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:37:10+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:37:10+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78349,
  prevBlockId: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
  pointId: '1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881',
  timestamp: 132109620,
  pointHeight: 79274,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '055f1f71f4cc21aaf19024e2e9f1accc9c3a3728106db6e420805c7d91b13ce871c53687cfe8774d24efbca6ba8b93e3482753946ab4e71e703f5a8ece55cf00',
  id: '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4' } { local: true,
  broadcast: true,
  votes: 
   { height: 78349,
     id: '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:37:10+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78349
2020-09-04T02:37:10+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:37:10+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:37:10+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:37:10+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78349, '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3', '1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881', 132109620, 79274, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '055f1f71f4cc21aaf19024e2e9f1accc9c3a3728106db6e420805c7d91b13ce871c53687cfe8774d24efbca6ba8b93e3482753946ab4e71e703f5a8ece55cf00', '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4');
2020-09-04T02:37:10+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:37:10+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:37:10+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78349,
  prevBlockId: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
  pointId: '1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881',
  timestamp: 132109620,
  pointHeight: 79274,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '055f1f71f4cc21aaf19024e2e9f1accc9c3a3728106db6e420805c7d91b13ce871c53687cfe8774d24efbca6ba8b93e3482753946ab4e71e703f5a8ece55cf00',
  id: '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4' }
2020-09-04T02:37:10+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4 height: 78349
2020-09-04T02:37:10+0530 <info> round.js:66 () New dapp block id: 853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4 height: 78349 via point: 79274
2020-09-04T02:37:10+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:37:48+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:37:48+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:37:48+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:37:48+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:37:48+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:37:48+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:37:48+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:37:48+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:37:48+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78349
2020-09-04T02:37:48+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78349 and "blocks"."_deleted_" = 0; [ [ '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4',
    '132109620',
    '78349',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
    '1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881',
    '79274',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '055f1f71f4cc21aaf19024e2e9f1accc9c3a3728106db6e420805c7d91b13ce871c53687cfe8774d24efbca6ba8b93e3482753946ab4e71e703f5a8ece55cf00',
    '0' ] ]
2020-09-04T02:37:48+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4',
  timestamp: 132109620,
  height: 78349,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3',
  pointId: '1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881',
  pointHeight: 79274,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '055f1f71f4cc21aaf19024e2e9f1accc9c3a3728106db6e420805c7d91b13ce871c53687cfe8774d24efbca6ba8b93e3482753946ab4e71e703f5a8ece55cf00',
  count: 0 }
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:37:48+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:37:48+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:37:48+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:37:48+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79274 }
2020-09-04T02:37:48+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:37:48+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:37:48+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:37:48+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:37:48+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:37:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4","timestamp":132109620,"height":78349,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"25c12b54722dfcb1a54d5fa19ab5f5cbbe5164b29655e086f9b8e8e8b707d2f3","pointId":"1887ed50c26c745c644ac96f5e0b360829aa134c637a6616a3610998edd13881","pointHeight":79274,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"055f1f71f4cc21aaf19024e2e9f1accc9c3a3728106db6e420805c7d91b13ce871c53687cfe8774d24efbca6ba8b93e3482753946ab4e71e703f5a8ece55cf00","count":0}, event = {"topic":"point","message":{"id":"7b5f4ce214a922f9cb835b79f0945668bb419600de1164678353f578f30e975b","height":79275}}
2020-09-04T02:37:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T02:37:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:37:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:37:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:37:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:37:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:37:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:37:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:37:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78350,
  prevBlockId: '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4',
  pointId: '7b5f4ce214a922f9cb835b79f0945668bb419600de1164678353f578f30e975b',
  timestamp: 132109665,
  pointHeight: 79275,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'd052b4d64974cebbf22412792c46a88763adceac94b2a6d5fbd691834008fa42e111d6af399fba3b52393794df25d98270bff16aaa5fcf8862203b45cb4cfd0b',
  id: 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48' } { local: true,
  broadcast: true,
  votes: 
   { height: 78350,
     id: 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:37:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78350
2020-09-04T02:37:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:37:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T02:37:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T02:37:50+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15670
2020-09-04T02:37:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T02:37:50+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T02:37:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:37:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:37:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd', 78350, '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4', '7b5f4ce214a922f9cb835b79f0945668bb419600de1164678353f578f30e975b', 132109665, 79275, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'd052b4d64974cebbf22412792c46a88763adceac94b2a6d5fbd691834008fa42e111d6af399fba3b52393794df25d98270bff16aaa5fcf8862203b45cb4cfd0b', 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48');
2020-09-04T02:37:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:37:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:37:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78350,
  prevBlockId: '853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4',
  pointId: '7b5f4ce214a922f9cb835b79f0945668bb419600de1164678353f578f30e975b',
  timestamp: 132109665,
  pointHeight: 79275,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'd052b4d64974cebbf22412792c46a88763adceac94b2a6d5fbd691834008fa42e111d6af399fba3b52393794df25d98270bff16aaa5fcf8862203b45cb4cfd0b',
  id: 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48' }
2020-09-04T02:37:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48 height: 78350
2020-09-04T02:37:50+0530 <info> round.js:66 () New dapp block id: b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48 height: 78350 via point: 79275
2020-09-04T02:37:50+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T02:37:58+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T02:37:58+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79275 }
2020-09-04T02:37:58+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T02:37:58+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T02:37:58+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:37:58+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T02:37:58+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:38:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd","height":78350,"prevBlockId":"853030130ae3dbc49607c04e6d94974fe03b822dabb21ec8a8b807449ba6ece4","pointId":"7b5f4ce214a922f9cb835b79f0945668bb419600de1164678353f578f30e975b","timestamp":132109665,"pointHeight":79275,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"d052b4d64974cebbf22412792c46a88763adceac94b2a6d5fbd691834008fa42e111d6af399fba3b52393794df25d98270bff16aaa5fcf8862203b45cb4cfd0b","id":"b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48"}, event = {"topic":"point","message":{"id":"2671a20e5154290a75b83732dae920106dd6bede67fd7f8188c10f867176045b","height":79276}}
2020-09-04T02:38:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T02:38:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:38:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:38:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:38:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:38:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:38:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:38:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:38:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78351,
  prevBlockId: 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48',
  pointId: '2671a20e5154290a75b83732dae920106dd6bede67fd7f8188c10f867176045b',
  timestamp: 132109680,
  pointHeight: 79276,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '77231426e3d24018ad64f3f325cbe4b400fb5281c5af01d8b6ab2de6121171d7d429b4fe6996bdc318ddb7316fb720de2692a91d75122f02f72363d9dcaca801',
  id: '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c' } { local: true,
  broadcast: true,
  votes: 
   { height: 78351,
     id: '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:38:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78351
2020-09-04T02:38:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:38:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:38:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:38:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78351, 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48', '2671a20e5154290a75b83732dae920106dd6bede67fd7f8188c10f867176045b', 132109680, 79276, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '77231426e3d24018ad64f3f325cbe4b400fb5281c5af01d8b6ab2de6121171d7d429b4fe6996bdc318ddb7316fb720de2692a91d75122f02f72363d9dcaca801', '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c');
2020-09-04T02:38:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:38:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:38:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78351,
  prevBlockId: 'b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48',
  pointId: '2671a20e5154290a75b83732dae920106dd6bede67fd7f8188c10f867176045b',
  timestamp: 132109680,
  pointHeight: 79276,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '77231426e3d24018ad64f3f325cbe4b400fb5281c5af01d8b6ab2de6121171d7d429b4fe6996bdc318ddb7316fb720de2692a91d75122f02f72363d9dcaca801',
  id: '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c' }
2020-09-04T02:38:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c height: 78351
2020-09-04T02:38:00+0530 <info> round.js:66 () New dapp block id: 1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c height: 78351 via point: 79276
2020-09-04T02:38:00+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T02:38:08+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T02:38:08+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79276 }
2020-09-04T02:38:08+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T02:38:08+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:38:08+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T02:38:08+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T02:38:08+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:38:18+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 9 func 
2020-09-04T02:38:18+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79276 }
2020-09-04T02:38:18+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 10 func 
2020-09-04T02:38:18+0530 <debug> sequence.js:1 (i) Main sequence out 9 func 
2020-09-04T02:38:18+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:38:18+0530 <debug> sequence.js:1 (i) Main sequence out 10 func 
2020-09-04T02:38:18+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:38:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","height":78351,"prevBlockId":"b95578fc2df3109c5e7365423a94acdae8cef338adf2b08a59b4e51bf5404f48","pointId":"2671a20e5154290a75b83732dae920106dd6bede67fd7f8188c10f867176045b","timestamp":132109680,"pointHeight":79276,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"77231426e3d24018ad64f3f325cbe4b400fb5281c5af01d8b6ab2de6121171d7d429b4fe6996bdc318ddb7316fb720de2692a91d75122f02f72363d9dcaca801","id":"1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c"}, event = {"topic":"point","message":{"id":"bf629d80fad8c3c0968c305d692e0a2803fdaeea1fc9711cc30527c43180739d","height":79277}}
2020-09-04T02:38:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 11 func 
2020-09-04T02:38:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:38:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:38:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:38:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:38:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:38:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:38:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:38:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78352,
  prevBlockId: '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c',
  pointId: 'bf629d80fad8c3c0968c305d692e0a2803fdaeea1fc9711cc30527c43180739d',
  timestamp: 132109695,
  pointHeight: 79277,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '405afb177ea8921b6e27cfdaa1572e838d50c6b18030256a311b31a8c041e19dcaf06d6fb6be7da4f075208b9b50f75914125be3016e64766be8e64000667c0a',
  id: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082' } { local: true,
  broadcast: true,
  votes: 
   { height: 78352,
     id: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:38:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78352
2020-09-04T02:38:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:38:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:38:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:38:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78352, '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c', 'bf629d80fad8c3c0968c305d692e0a2803fdaeea1fc9711cc30527c43180739d', 132109695, 79277, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '405afb177ea8921b6e27cfdaa1572e838d50c6b18030256a311b31a8c041e19dcaf06d6fb6be7da4f075208b9b50f75914125be3016e64766be8e64000667c0a', '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082');
2020-09-04T02:38:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:38:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:38:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78352,
  prevBlockId: '1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c',
  pointId: 'bf629d80fad8c3c0968c305d692e0a2803fdaeea1fc9711cc30527c43180739d',
  timestamp: 132109695,
  pointHeight: 79277,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '405afb177ea8921b6e27cfdaa1572e838d50c6b18030256a311b31a8c041e19dcaf06d6fb6be7da4f075208b9b50f75914125be3016e64766be8e64000667c0a',
  id: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082' }
2020-09-04T02:38:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082 height: 78352
2020-09-04T02:38:20+0530 <info> round.js:66 () New dapp block id: 33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082 height: 78352 via point: 79277
2020-09-04T02:38:20+0530 <debug> sequence.js:1 (i) Main sequence out 11 func 
2020-09-04T02:38:28+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 12 func 
2020-09-04T02:38:28+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79277 }
2020-09-04T02:38:28+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 13 func 
2020-09-04T02:38:28+0530 <debug> sequence.js:1 (i) Main sequence out 12 func 
2020-09-04T02:38:28+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:38:28+0530 <debug> sequence.js:1 (i) Main sequence out 13 func 
2020-09-04T02:38:28+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:38:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","height":78352,"prevBlockId":"1787dd6b41f59dcae7e49819b06471daedf6170e5b7e19fbd9ae8158faa63d9c","pointId":"bf629d80fad8c3c0968c305d692e0a2803fdaeea1fc9711cc30527c43180739d","timestamp":132109695,"pointHeight":79277,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"405afb177ea8921b6e27cfdaa1572e838d50c6b18030256a311b31a8c041e19dcaf06d6fb6be7da4f075208b9b50f75914125be3016e64766be8e64000667c0a","id":"33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082"}, event = {"topic":"point","message":{"id":"31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172","height":79278}}
2020-09-04T02:38:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 14 func 
2020-09-04T02:38:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:38:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:38:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:38:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:38:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:38:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:38:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:38:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78353,
  prevBlockId: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
  pointId: '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
  timestamp: 132109710,
  pointHeight: 79278,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
  id: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474' } { local: true,
  broadcast: true,
  votes: 
   { height: 78353,
     id: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:38:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78353
2020-09-04T02:38:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:38:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:38:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:38:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78353, '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082', '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172', 132109710, 79278, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06', '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474');
2020-09-04T02:38:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:38:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:38:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78353,
  prevBlockId: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
  pointId: '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
  timestamp: 132109710,
  pointHeight: 79278,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
  id: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474' }
2020-09-04T02:38:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474 height: 78353
2020-09-04T02:38:30+0530 <info> round.js:66 () New dapp block id: 7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474 height: 78353 via point: 79278
2020-09-04T02:38:30+0530 <debug> sequence.js:1 (i) Main sequence out 14 func 
2020-09-04T02:38:38+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 15 func 
2020-09-04T02:38:38+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79278 }
2020-09-04T02:38:38+0530 <debug> sequence.js:1 (i) Main sequence out 15 func 
2020-09-04T02:38:38+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:38:38+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 16 func 
2020-09-04T02:38:38+0530 <debug> sequence.js:1 (i) Main sequence out 16 func 
2020-09-04T02:38:38+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:39:50+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:39:50+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:39:50+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:39:50+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:39:50+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:39:50+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:39:50+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:39:50+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:39:50+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78353
2020-09-04T02:39:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78353 and "blocks"."_deleted_" = 0; [ [ '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
    '132109710',
    '78353',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
    '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
    '79278',
    '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
    'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
    '0' ] ]
2020-09-04T02:39:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
  timestamp: 132109710,
  height: 78353,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
  pointId: '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
  pointHeight: 79278,
  delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  signature: 'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
  count: 0 }
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:39:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:39:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:39:50+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:39:50+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79279 }
2020-09-04T02:39:50+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:39:50+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:39:50+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:39:50+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:39:50+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:39:51+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:41:35+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:41:35+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:41:35+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:41:35+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:41:35+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:41:35+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:41:35+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:41:35+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:41:35+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78353
2020-09-04T02:41:35+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78353 and "blocks"."_deleted_" = 0; [ [ '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
    '132109710',
    '78353',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
    '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
    '79278',
    '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
    'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
    '0' ] ]
2020-09-04T02:41:35+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
  timestamp: 132109710,
  height: 78353,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
  pointId: '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
  pointHeight: 79278,
  delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  signature: 'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
  count: 0 }
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:41:35+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:41:35+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:41:35+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:41:35+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79280 }
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:41:35+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:41:35+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:41:35+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:41:35+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:41:35+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:41:36+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:42:58+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:42:59+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:42:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:42:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:42:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:42:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:42:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:42:59+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:42:59+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:42:59+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78353
2020-09-04T02:42:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78353 and "blocks"."_deleted_" = 0; [ [ '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
    '132109710',
    '78353',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
    '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
    '79278',
    '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
    'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
    '0' ] ]
2020-09-04T02:42:59+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
  timestamp: 132109710,
  height: 78353,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082',
  pointId: '31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172',
  pointHeight: 79278,
  delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  signature: 'df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06',
  count: 0 }
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:42:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:42:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:42:59+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:42:59+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79280 }
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:42:59+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:42:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:42:59+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:42:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:42:59+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:43:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474","timestamp":132109710,"height":78353,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"33159e0dd953e9c3ed8595f4745590cb9185e5f67e1885d43204599f92324082","pointId":"31403a2a8be540e7af6dc356f28bff975e2ac7bd09a025cdc1d6bc4df1812172","pointHeight":79278,"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","signature":"df01b5cb88d69427bd270810252469d56c7c625b11c57aa90532bf72c85a8de6aa6556efce6fc55fce85ff7a987ce0eb012b8facb97b139ced4b722543d6bb06","count":0}, event = {"topic":"point","message":{"id":"f8422c67c3d5a138f031b8c66dc8cc1b509ad2f58684491c99b2e128f35cd825","height":79281}}
2020-09-04T02:43:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T02:43:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:43:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:43:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:43:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:43:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:43:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:43:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:43:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78354,
  prevBlockId: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
  pointId: 'f8422c67c3d5a138f031b8c66dc8cc1b509ad2f58684491c99b2e128f35cd825',
  timestamp: 132109980,
  pointHeight: 79281,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '49d0c0e26be4192ca0cf7f0935a2459c44bf0dcf796655003151934669487f1d336a71cd1bfe325cb1e149034c75f4b2696cf77635b2c2fed813063116382c0a',
  id: 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530' } { local: true,
  broadcast: true,
  votes: 
   { height: 78354,
     id: 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:43:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78354
2020-09-04T02:43:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:43:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:43:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:43:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78354, '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474', 'f8422c67c3d5a138f031b8c66dc8cc1b509ad2f58684491c99b2e128f35cd825', 132109980, 79281, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '49d0c0e26be4192ca0cf7f0935a2459c44bf0dcf796655003151934669487f1d336a71cd1bfe325cb1e149034c75f4b2696cf77635b2c2fed813063116382c0a', 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530');
2020-09-04T02:43:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:43:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:43:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78354,
  prevBlockId: '7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474',
  pointId: 'f8422c67c3d5a138f031b8c66dc8cc1b509ad2f58684491c99b2e128f35cd825',
  timestamp: 132109980,
  pointHeight: 79281,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '49d0c0e26be4192ca0cf7f0935a2459c44bf0dcf796655003151934669487f1d336a71cd1bfe325cb1e149034c75f4b2696cf77635b2c2fed813063116382c0a',
  id: 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530' }
2020-09-04T02:43:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530 height: 78354
2020-09-04T02:43:00+0530 <info> round.js:66 () New dapp block id: a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530 height: 78354 via point: 79281
2020-09-04T02:43:00+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T02:43:09+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T02:43:09+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79281 }
2020-09-04T02:43:09+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T02:43:09+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:43:09+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T02:43:09+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T02:43:09+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:43:19+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T02:43:19+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79281 }
2020-09-04T02:43:19+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T02:43:19+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:43:19+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T02:43:19+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T02:43:19+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:43:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","height":78354,"prevBlockId":"7696e4b32980ea32c799848e547ad133f237fca99b6858bfb4118501d1975474","pointId":"f8422c67c3d5a138f031b8c66dc8cc1b509ad2f58684491c99b2e128f35cd825","timestamp":132109980,"pointHeight":79281,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"49d0c0e26be4192ca0cf7f0935a2459c44bf0dcf796655003151934669487f1d336a71cd1bfe325cb1e149034c75f4b2696cf77635b2c2fed813063116382c0a","id":"a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530"}, event = {"topic":"point","message":{"id":"ba725356ad586da9db5693018a3b1e29313da4cd21324cc600d99502fd7af8a2","height":79282}}
2020-09-04T02:43:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T02:43:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:43:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:43:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:43:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:43:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:43:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:43:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:43:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78355,
  prevBlockId: 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530',
  pointId: 'ba725356ad586da9db5693018a3b1e29313da4cd21324cc600d99502fd7af8a2',
  timestamp: 132109995,
  pointHeight: 79282,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '5f6a1480c2a64703f3879ead05958bc9f94bf7792d34f155cb548e651283b4a3a77b9f69830175264fc53f82b4d88c7395c441e5ea19b0ffb812395de5242701',
  id: '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42' } { local: true,
  broadcast: true,
  votes: 
   { height: 78355,
     id: '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:43:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78355
2020-09-04T02:43:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:43:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T02:43:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T02:43:20+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15671
2020-09-04T02:43:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T02:43:20+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T02:43:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:43:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:43:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78355, 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530', 'ba725356ad586da9db5693018a3b1e29313da4cd21324cc600d99502fd7af8a2', 132109995, 79282, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '5f6a1480c2a64703f3879ead05958bc9f94bf7792d34f155cb548e651283b4a3a77b9f69830175264fc53f82b4d88c7395c441e5ea19b0ffb812395de5242701', '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42');
2020-09-04T02:43:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:43:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:43:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78355,
  prevBlockId: 'a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530',
  pointId: 'ba725356ad586da9db5693018a3b1e29313da4cd21324cc600d99502fd7af8a2',
  timestamp: 132109995,
  pointHeight: 79282,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '5f6a1480c2a64703f3879ead05958bc9f94bf7792d34f155cb548e651283b4a3a77b9f69830175264fc53f82b4d88c7395c441e5ea19b0ffb812395de5242701',
  id: '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42' }
2020-09-04T02:43:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42 height: 78355
2020-09-04T02:43:20+0530 <info> round.js:66 () New dapp block id: 15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42 height: 78355 via point: 79282
2020-09-04T02:43:20+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T02:43:29+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 9 func 
2020-09-04T02:43:29+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79282 }
2020-09-04T02:43:29+0530 <debug> sequence.js:1 (i) Main sequence out 9 func 
2020-09-04T02:43:29+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:43:29+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 10 func 
2020-09-04T02:43:29+0530 <debug> sequence.js:1 (i) Main sequence out 10 func 
2020-09-04T02:43:29+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:43:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","height":78355,"prevBlockId":"a24cdec5221a58ad98cd5501050e137a21a8b83910d736bfd67b40398d3c4530","pointId":"ba725356ad586da9db5693018a3b1e29313da4cd21324cc600d99502fd7af8a2","timestamp":132109995,"pointHeight":79282,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"5f6a1480c2a64703f3879ead05958bc9f94bf7792d34f155cb548e651283b4a3a77b9f69830175264fc53f82b4d88c7395c441e5ea19b0ffb812395de5242701","id":"15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42"}, event = {"topic":"point","message":{"id":"9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7","height":79283}}
2020-09-04T02:43:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 11 func 
2020-09-04T02:43:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:43:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:43:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:43:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:43:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:43:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:43:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:43:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78356,
  prevBlockId: '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42',
  pointId: '9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7',
  timestamp: 132110010,
  pointHeight: 79283,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'a70c77adc75cc540879e33addceb86fac3d7f5f254c392c6403f9763a9fe2884eca8b6dfefedbbe8aff5ae69053f2d4c486d26d9ee2d9c24ef3610a03b03ee04',
  id: 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff' } { local: true,
  broadcast: true,
  votes: 
   { height: 78356,
     id: 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:43:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78356
2020-09-04T02:43:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:43:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:43:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:43:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78356, '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42', '9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7', 132110010, 79283, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'a70c77adc75cc540879e33addceb86fac3d7f5f254c392c6403f9763a9fe2884eca8b6dfefedbbe8aff5ae69053f2d4c486d26d9ee2d9c24ef3610a03b03ee04', 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff');
2020-09-04T02:43:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:43:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:43:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78356,
  prevBlockId: '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42',
  pointId: '9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7',
  timestamp: 132110010,
  pointHeight: 79283,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'a70c77adc75cc540879e33addceb86fac3d7f5f254c392c6403f9763a9fe2884eca8b6dfefedbbe8aff5ae69053f2d4c486d26d9ee2d9c24ef3610a03b03ee04',
  id: 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff' }
2020-09-04T02:43:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff height: 78356
2020-09-04T02:43:30+0530 <info> round.js:66 () New dapp block id: a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff height: 78356 via point: 79283
2020-09-04T02:43:30+0530 <debug> sequence.js:1 (i) Main sequence out 11 func 
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T02:47:17+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T02:47:17+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T02:47:17+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T02:47:17+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T02:47:17+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T02:47:17+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T02:47:17+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T02:47:17+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T02:47:17+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78356
2020-09-04T02:47:17+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78356 and "blocks"."_deleted_" = 0; [ [ 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff',
    '132110010',
    '78356',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42',
    '9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7',
    '79283',
    'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
    'a70c77adc75cc540879e33addceb86fac3d7f5f254c392c6403f9763a9fe2884eca8b6dfefedbbe8aff5ae69053f2d4c486d26d9ee2d9c24ef3610a03b03ee04',
    '0' ] ]
2020-09-04T02:47:17+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff',
  timestamp: 132110010,
  height: 78356,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42',
  pointId: '9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7',
  pointHeight: 79283,
  delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  signature: 'a70c77adc75cc540879e33addceb86fac3d7f5f254c392c6403f9763a9fe2884eca8b6dfefedbbe8aff5ae69053f2d4c486d26d9ee2d9c24ef3610a03b03ee04',
  count: 0 }
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T02:47:17+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T02:47:17+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T02:47:17+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T02:47:17+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79283 }
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T02:47:17+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T02:47:17+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T02:47:17+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T02:47:17+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T02:47:17+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T02:47:18+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T02:47:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff","timestamp":132110010,"height":78356,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"15399d014852dbb5b07bcc41af1bda6d67590e7692490e5de8bc77c440f00d42","pointId":"9677734d5c2ce64e74089b6c7448eafa50d3f96ff8dc0e3ec35082605657e2a7","pointHeight":79283,"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","signature":"a70c77adc75cc540879e33addceb86fac3d7f5f254c392c6403f9763a9fe2884eca8b6dfefedbbe8aff5ae69053f2d4c486d26d9ee2d9c24ef3610a03b03ee04","count":0}, event = {"topic":"point","message":{"id":"40fa39b21921fb10abaa684f3275f8626b0185664bb2d0f8ad68638886d958ad","height":79284}}
2020-09-04T02:47:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T02:47:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:47:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:47:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:47:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:47:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:47:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:47:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:47:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78357,
  prevBlockId: 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff',
  pointId: '40fa39b21921fb10abaa684f3275f8626b0185664bb2d0f8ad68638886d958ad',
  timestamp: 132110235,
  pointHeight: 79284,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'ca6061069e88528172063788008e35b390ab8668020b53d1006a82762765bee46100c59954fd85ba29e8200bac323a62c37147078e41e810e775559cc669030b',
  id: 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57' } { local: true,
  broadcast: true,
  votes: 
   { height: 78357,
     id: 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:47:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78357
2020-09-04T02:47:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:47:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:47:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:47:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78357, 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff', '40fa39b21921fb10abaa684f3275f8626b0185664bb2d0f8ad68638886d958ad', 132110235, 79284, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'ca6061069e88528172063788008e35b390ab8668020b53d1006a82762765bee46100c59954fd85ba29e8200bac323a62c37147078e41e810e775559cc669030b', 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57');
2020-09-04T02:47:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:47:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:47:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78357,
  prevBlockId: 'a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff',
  pointId: '40fa39b21921fb10abaa684f3275f8626b0185664bb2d0f8ad68638886d958ad',
  timestamp: 132110235,
  pointHeight: 79284,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'ca6061069e88528172063788008e35b390ab8668020b53d1006a82762765bee46100c59954fd85ba29e8200bac323a62c37147078e41e810e775559cc669030b',
  id: 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57' }
2020-09-04T02:47:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57 height: 78357
2020-09-04T02:47:20+0530 <info> round.js:66 () New dapp block id: fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57 height: 78357 via point: 79284
2020-09-04T02:47:20+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T02:47:27+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T02:47:27+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79284 }
2020-09-04T02:47:27+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T02:47:27+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:47:27+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T02:47:27+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T02:47:27+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:47:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","height":78357,"prevBlockId":"a355710c4066744a577b4035075698f6e08345269359239e6c76b9e16a15e8ff","pointId":"40fa39b21921fb10abaa684f3275f8626b0185664bb2d0f8ad68638886d958ad","timestamp":132110235,"pointHeight":79284,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"ca6061069e88528172063788008e35b390ab8668020b53d1006a82762765bee46100c59954fd85ba29e8200bac323a62c37147078e41e810e775559cc669030b","id":"fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57"}, event = {"topic":"point","message":{"id":"1ab1d7cd131fa12499f41f131ae2c8bfc8418c0e567788cf6cd8d9f89ccdf75d","height":79285}}
2020-09-04T02:47:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T02:47:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:47:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:47:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:47:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:47:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:47:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:47:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:47:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78358,
  prevBlockId: 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57',
  pointId: '1ab1d7cd131fa12499f41f131ae2c8bfc8418c0e567788cf6cd8d9f89ccdf75d',
  timestamp: 132110250,
  pointHeight: 79285,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'f6c15346d47605757f4a7ff3815484e24a1710431a5fbd0be5ae4803d201e938ec8ca711cfdc48121ce72cc99e1911e8e2c0a83c3b53c5d56cc9d82e5e048d0e',
  id: '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5' } { local: true,
  broadcast: true,
  votes: 
   { height: 78358,
     id: '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:47:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78358
2020-09-04T02:47:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:47:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:47:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:47:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd', 78358, 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57', '1ab1d7cd131fa12499f41f131ae2c8bfc8418c0e567788cf6cd8d9f89ccdf75d', 132110250, 79285, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'f6c15346d47605757f4a7ff3815484e24a1710431a5fbd0be5ae4803d201e938ec8ca711cfdc48121ce72cc99e1911e8e2c0a83c3b53c5d56cc9d82e5e048d0e', '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5');
2020-09-04T02:47:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:47:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:47:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78358,
  prevBlockId: 'fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57',
  pointId: '1ab1d7cd131fa12499f41f131ae2c8bfc8418c0e567788cf6cd8d9f89ccdf75d',
  timestamp: 132110250,
  pointHeight: 79285,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'f6c15346d47605757f4a7ff3815484e24a1710431a5fbd0be5ae4803d201e938ec8ca711cfdc48121ce72cc99e1911e8e2c0a83c3b53c5d56cc9d82e5e048d0e',
  id: '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5' }
2020-09-04T02:47:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5 height: 78358
2020-09-04T02:47:30+0530 <info> round.js:66 () New dapp block id: 685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5 height: 78358 via point: 79285
2020-09-04T02:47:30+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T02:47:37+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T02:47:37+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79285 }
2020-09-04T02:47:37+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T02:47:37+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:47:37+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T02:47:37+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T02:47:37+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:47:47+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 9 func 
2020-09-04T02:47:47+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79285 }
2020-09-04T02:47:47+0530 <debug> sequence.js:1 (i) Main sequence out 9 func 
2020-09-04T02:47:47+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T02:47:47+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 10 func 
2020-09-04T02:47:47+0530 <debug> sequence.js:1 (i) Main sequence out 10 func 
2020-09-04T02:47:47+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T02:47:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd","height":78358,"prevBlockId":"fe51e44db7d01e0542830bd5397865a4755e4e02a72693395a75ca0678f1ee57","pointId":"1ab1d7cd131fa12499f41f131ae2c8bfc8418c0e567788cf6cd8d9f89ccdf75d","timestamp":132110250,"pointHeight":79285,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"f6c15346d47605757f4a7ff3815484e24a1710431a5fbd0be5ae4803d201e938ec8ca711cfdc48121ce72cc99e1911e8e2c0a83c3b53c5d56cc9d82e5e048d0e","id":"685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5"}, event = {"topic":"point","message":{"id":"44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec","height":79286}}
2020-09-04T02:47:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 11 func 
2020-09-04T02:47:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T02:47:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T02:47:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T02:47:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T02:47:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T02:47:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T02:47:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T02:47:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78359,
  prevBlockId: '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5',
  pointId: '44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec',
  timestamp: 132110265,
  pointHeight: 79286,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'c220e73821d9e78d0a28ebcd9847e20975c164df1bfad0136f4b4df62493ae4d473c3a444873f0a759aa998a98ee4445aa25bb3161e3891be3e0d747156ade0f',
  id: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2' } { local: true,
  broadcast: true,
  votes: 
   { height: 78359,
     id: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T02:47:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78359
2020-09-04T02:47:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T02:47:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T02:47:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T02:47:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78359, '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5', '44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec', 132110265, 79286, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'c220e73821d9e78d0a28ebcd9847e20975c164df1bfad0136f4b4df62493ae4d473c3a444873f0a759aa998a98ee4445aa25bb3161e3891be3e0d747156ade0f', '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2');
2020-09-04T02:47:51+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T02:47:51+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T02:47:51+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78359,
  prevBlockId: '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5',
  pointId: '44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec',
  timestamp: 132110265,
  pointHeight: 79286,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'c220e73821d9e78d0a28ebcd9847e20975c164df1bfad0136f4b4df62493ae4d473c3a444873f0a759aa998a98ee4445aa25bb3161e3891be3e0d747156ade0f',
  id: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2' }
2020-09-04T02:47:51+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2 height: 78359
2020-09-04T02:47:51+0530 <info> round.js:66 () New dapp block id: 2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2 height: 78359 via point: 79286
2020-09-04T02:47:51+0530 <debug> sequence.js:1 (i) Main sequence out 11 func 
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:34:02+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:34:02+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:34:03+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:34:03+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:34:03+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:34:03+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:34:03+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:34:03+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:34:03+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:34:03+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:34:03+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:34:03+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:34:03+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:34:03+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78359
2020-09-04T03:34:03+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78359 and "blocks"."_deleted_" = 0; [ [ '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
    '132110265',
    '78359',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5',
    '44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec',
    '79286',
    '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
    'c220e73821d9e78d0a28ebcd9847e20975c164df1bfad0136f4b4df62493ae4d473c3a444873f0a759aa998a98ee4445aa25bb3161e3891be3e0d747156ade0f',
    '0' ] ]
2020-09-04T03:34:03+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
  timestamp: 132110265,
  height: 78359,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5',
  pointId: '44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec',
  pointHeight: 79286,
  delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  signature: 'c220e73821d9e78d0a28ebcd9847e20975c164df1bfad0136f4b4df62493ae4d473c3a444873f0a759aa998a98ee4445aa25bb3161e3891be3e0d747156ade0f',
  count: 0 }
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:34:03+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:34:03+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:34:03+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:34:03+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79287 }
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:34:03+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:34:03+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:34:03+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:34:03+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:34:03+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:34:13+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:34:13+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79287 }
2020-09-04T03:34:13+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:34:13+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:34:13+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:34:13+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:34:13+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:34:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2","timestamp":132110265,"height":78359,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"685b47d0bec12859b0fce3237a11c5c95dcaca882a89b192735ea754387115d5","pointId":"44034bc3f31cfd7310377325b3c44cbefdf10fe6c4bb444b4d59d3201ed112ec","pointHeight":79286,"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","signature":"c220e73821d9e78d0a28ebcd9847e20975c164df1bfad0136f4b4df62493ae4d473c3a444873f0a759aa998a98ee4445aa25bb3161e3891be3e0d747156ade0f","count":0}, event = {"topic":"point","message":{"id":"de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82","height":79288}}
2020-09-04T03:34:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:34:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:34:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:34:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:34:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:34:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:34:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:34:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:34:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78360,
  prevBlockId: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
  pointId: 'de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82',
  timestamp: 132113055,
  pointHeight: 79288,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'bf5987593f964e719b82357f96e0f8b540b48a9159d1c4cff4219fb4bd4a1eb852e2c8c3138c1e60f64a6986a0e30757a7b346b463e5d811eac75e8958518b0d',
  id: '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527' } { local: true,
  broadcast: true,
  votes: 
   { height: 78360,
     id: '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:34:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78360
2020-09-04T03:34:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:34:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T03:34:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T03:34:20+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15672
2020-09-04T03:34:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T03:34:20+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T03:34:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:34:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:34:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78360, '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2', 'de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82', 132113055, 79288, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'bf5987593f964e719b82357f96e0f8b540b48a9159d1c4cff4219fb4bd4a1eb852e2c8c3138c1e60f64a6986a0e30757a7b346b463e5d811eac75e8958518b0d', '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527');
2020-09-04T03:34:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:34:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:34:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78360,
  prevBlockId: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
  pointId: 'de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82',
  timestamp: 132113055,
  pointHeight: 79288,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'bf5987593f964e719b82357f96e0f8b540b48a9159d1c4cff4219fb4bd4a1eb852e2c8c3138c1e60f64a6986a0e30757a7b346b463e5d811eac75e8958518b0d',
  id: '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527' }
2020-09-04T03:34:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527 height: 78360
2020-09-04T03:34:20+0530 <info> round.js:66 () New dapp block id: 6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527 height: 78360 via point: 79288
2020-09-04T03:34:20+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:34:23+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T03:34:23+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79288 }
2020-09-04T03:34:23+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T03:34:23+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:34:23+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T03:34:23+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T03:34:23+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:34:48+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:34:48+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:34:49+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:34:49+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:34:49+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:34:49+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:34:49+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:34:49+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:34:49+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:34:49+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:34:49+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:34:49+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:34:49+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:34:49+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78360
2020-09-04T03:34:49+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78360 and "blocks"."_deleted_" = 0; [ [ '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527',
    '132113055',
    '78360',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
    'de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82',
    '79288',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    'bf5987593f964e719b82357f96e0f8b540b48a9159d1c4cff4219fb4bd4a1eb852e2c8c3138c1e60f64a6986a0e30757a7b346b463e5d811eac75e8958518b0d',
    '0' ] ]
2020-09-04T03:34:49+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527',
  timestamp: 132113055,
  height: 78360,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2',
  pointId: 'de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82',
  pointHeight: 79288,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: 'bf5987593f964e719b82357f96e0f8b540b48a9159d1c4cff4219fb4bd4a1eb852e2c8c3138c1e60f64a6986a0e30757a7b346b463e5d811eac75e8958518b0d',
  count: 0 }
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:34:49+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:34:49+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:34:49+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:34:49+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79288 }
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:34:49+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:34:49+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:34:49+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:34:49+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:34:49+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:34:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527","timestamp":132113055,"height":78360,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"2ac911dab885e9c31814c65ef9cb6021c3669c91d89a8249bceea2a124668cd2","pointId":"de45b26c337c7b089e2c4ee7bfcf5ed27bb24063b2d73e618aad8a89c06acc82","pointHeight":79288,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"bf5987593f964e719b82357f96e0f8b540b48a9159d1c4cff4219fb4bd4a1eb852e2c8c3138c1e60f64a6986a0e30757a7b346b463e5d811eac75e8958518b0d","count":0}, event = {"topic":"point","message":{"id":"397709d35755219bd624b3458653f4583c26aa22b009e4998dfcf99044a39c3c","height":79289}}
2020-09-04T03:34:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:34:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:34:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:34:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:34:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:34:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:34:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:34:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:34:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78361,
  prevBlockId: '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527',
  pointId: '397709d35755219bd624b3458653f4583c26aa22b009e4998dfcf99044a39c3c',
  timestamp: 132113085,
  pointHeight: 79289,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '80b08e5ce6b913eaeb8fe58615b9f19e2ba0e195ec4165dbe6af399a751768624f64874636fcd7d8fe5f7846d3d4fd11c18e8ac83e220bb2b5dd67ebaab70f0a',
  id: 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9' } { local: true,
  broadcast: true,
  votes: 
   { height: 78361,
     id: 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:34:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78361
2020-09-04T03:34:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:34:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:34:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:34:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd', 78361, '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527', '397709d35755219bd624b3458653f4583c26aa22b009e4998dfcf99044a39c3c', 132113085, 79289, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '80b08e5ce6b913eaeb8fe58615b9f19e2ba0e195ec4165dbe6af399a751768624f64874636fcd7d8fe5f7846d3d4fd11c18e8ac83e220bb2b5dd67ebaab70f0a', 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9');
2020-09-04T03:34:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:34:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:34:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78361,
  prevBlockId: '6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527',
  pointId: '397709d35755219bd624b3458653f4583c26aa22b009e4998dfcf99044a39c3c',
  timestamp: 132113085,
  pointHeight: 79289,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '80b08e5ce6b913eaeb8fe58615b9f19e2ba0e195ec4165dbe6af399a751768624f64874636fcd7d8fe5f7846d3d4fd11c18e8ac83e220bb2b5dd67ebaab70f0a',
  id: 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9' }
2020-09-04T03:34:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9 height: 78361
2020-09-04T03:34:50+0530 <info> round.js:66 () New dapp block id: ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9 height: 78361 via point: 79289
2020-09-04T03:34:50+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:34:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:34:59+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79289 }
2020-09-04T03:34:59+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:34:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:34:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:34:59+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:34:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:35:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd","height":78361,"prevBlockId":"6d7222e48719dc0de4adff60d95486429c9287e671af99f6aae6266487dd3527","pointId":"397709d35755219bd624b3458653f4583c26aa22b009e4998dfcf99044a39c3c","timestamp":132113085,"pointHeight":79289,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"80b08e5ce6b913eaeb8fe58615b9f19e2ba0e195ec4165dbe6af399a751768624f64874636fcd7d8fe5f7846d3d4fd11c18e8ac83e220bb2b5dd67ebaab70f0a","id":"ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9"}, event = {"topic":"point","message":{"id":"7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8","height":79290}}
2020-09-04T03:35:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T03:35:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:35:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:35:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:35:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:35:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:35:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:35:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:35:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78362,
  prevBlockId: 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9',
  pointId: '7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8',
  timestamp: 132113100,
  pointHeight: 79290,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'ed0ec3ceae6421026949b065a14711979065bbbe9d72e3c8c328ed91ee58132ada9ffa9092e806ef2faacd6ba4af42a721f9824319bf5006ec60a60eae435c0a',
  id: '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede' } { local: true,
  broadcast: true,
  votes: 
   { height: 78362,
     id: '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:35:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78362
2020-09-04T03:35:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:35:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:35:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:35:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78362, 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9', '7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8', 132113100, 79290, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'ed0ec3ceae6421026949b065a14711979065bbbe9d72e3c8c328ed91ee58132ada9ffa9092e806ef2faacd6ba4af42a721f9824319bf5006ec60a60eae435c0a', '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede');
2020-09-04T03:35:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:35:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:35:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78362,
  prevBlockId: 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9',
  pointId: '7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8',
  timestamp: 132113100,
  pointHeight: 79290,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'ed0ec3ceae6421026949b065a14711979065bbbe9d72e3c8c328ed91ee58132ada9ffa9092e806ef2faacd6ba4af42a721f9824319bf5006ec60a60eae435c0a',
  id: '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede' }
2020-09-04T03:35:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede height: 78362
2020-09-04T03:35:00+0530 <info> round.js:66 () New dapp block id: 15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede height: 78362 via point: 79290
2020-09-04T03:35:00+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T03:35:09+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T03:35:09+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79290 }
2020-09-04T03:35:09+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T03:35:09+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:35:09+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T03:35:09+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T03:35:09+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:36:38+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:36:38+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:36:39+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:36:39+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:36:39+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:36:39+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:36:39+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:36:39+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:36:39+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:36:39+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78362
2020-09-04T03:36:39+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78362 and "blocks"."_deleted_" = 0; [ [ '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede',
    '132113100',
    '78362',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9',
    '7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8',
    '79290',
    '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
    'ed0ec3ceae6421026949b065a14711979065bbbe9d72e3c8c328ed91ee58132ada9ffa9092e806ef2faacd6ba4af42a721f9824319bf5006ec60a60eae435c0a',
    '0' ] ]
2020-09-04T03:36:39+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede',
  timestamp: 132113100,
  height: 78362,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9',
  pointId: '7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8',
  pointHeight: 79290,
  delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  signature: 'ed0ec3ceae6421026949b065a14711979065bbbe9d72e3c8c328ed91ee58132ada9ffa9092e806ef2faacd6ba4af42a721f9824319bf5006ec60a60eae435c0a',
  count: 0 }
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:36:39+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:36:39+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:36:39+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:36:39+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79290 }
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:36:39+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:36:39+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:36:39+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:36:39+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:36:39+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:36:40+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede","timestamp":132113100,"height":78362,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"ae1ed353f3a61e0bb148652614093debde6a5e803b202fd1938e2adbfab10fe9","pointId":"7cdb3d60df5a043bef4a5b56f3efc0670a32714486c5d1ce339a045236639de8","pointHeight":79290,"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","signature":"ed0ec3ceae6421026949b065a14711979065bbbe9d72e3c8c328ed91ee58132ada9ffa9092e806ef2faacd6ba4af42a721f9824319bf5006ec60a60eae435c0a","count":0}, event = {"topic":"point","message":{"id":"e5d88a1690b72a50db4162bac8cc560b5121fac53ff7954e2c3b80fd53428fcb","height":79291}}
2020-09-04T03:36:40+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:36:40+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:36:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:36:40+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:36:40+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:36:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:36:40+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:36:40+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:36:40+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78363,
  prevBlockId: '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede',
  pointId: 'e5d88a1690b72a50db4162bac8cc560b5121fac53ff7954e2c3b80fd53428fcb',
  timestamp: 132113190,
  pointHeight: 79291,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '0991a2e7435825a7d4fd0533ffc6312628b52807c45210eda9cb5b7bb4edeb3a0d7226f08229515e313afc9790c4be565e779eaa3a12b0c8e4a652ae7fd9960d',
  id: '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0' } { local: true,
  broadcast: true,
  votes: 
   { height: 78363,
     id: '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:36:40+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78363
2020-09-04T03:36:40+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:36:40+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:36:40+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:36:40+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78363, '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede', 'e5d88a1690b72a50db4162bac8cc560b5121fac53ff7954e2c3b80fd53428fcb', 132113190, 79291, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '0991a2e7435825a7d4fd0533ffc6312628b52807c45210eda9cb5b7bb4edeb3a0d7226f08229515e313afc9790c4be565e779eaa3a12b0c8e4a652ae7fd9960d', '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0');
2020-09-04T03:36:40+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:36:40+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:36:40+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78363,
  prevBlockId: '15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede',
  pointId: 'e5d88a1690b72a50db4162bac8cc560b5121fac53ff7954e2c3b80fd53428fcb',
  timestamp: 132113190,
  pointHeight: 79291,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '0991a2e7435825a7d4fd0533ffc6312628b52807c45210eda9cb5b7bb4edeb3a0d7226f08229515e313afc9790c4be565e779eaa3a12b0c8e4a652ae7fd9960d',
  id: '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0' }
2020-09-04T03:36:40+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0 height: 78363
2020-09-04T03:36:40+0530 <info> round.js:66 () New dapp block id: 7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0 height: 78363 via point: 79291
2020-09-04T03:36:40+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:36:49+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:36:49+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79291 }
2020-09-04T03:36:49+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:36:49+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:36:49+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:36:49+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:36:49+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:36:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","height":78363,"prevBlockId":"15057a742637f36bc01dc405f88e12c71c54f33f31fff92765fb0b76fcc95ede","pointId":"e5d88a1690b72a50db4162bac8cc560b5121fac53ff7954e2c3b80fd53428fcb","timestamp":132113190,"pointHeight":79291,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"0991a2e7435825a7d4fd0533ffc6312628b52807c45210eda9cb5b7bb4edeb3a0d7226f08229515e313afc9790c4be565e779eaa3a12b0c8e4a652ae7fd9960d","id":"7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0"}, event = {"topic":"point","message":{"id":"4ec5e0e5e1ff5209bcf588f8bfa7ded5c0b336eef29d00130289f345849b1284","height":79292}}
2020-09-04T03:36:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T03:36:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:36:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:36:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:36:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:36:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:36:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:36:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:36:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78364,
  prevBlockId: '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0',
  pointId: '4ec5e0e5e1ff5209bcf588f8bfa7ded5c0b336eef29d00130289f345849b1284',
  timestamp: 132113205,
  pointHeight: 79292,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '4672c4f2fd4d8bd5565199cf7c27f211d1b93e42e104e9f517c1c9586127c59e6ccb36fddc186fa5bf387db64b9e380499ad25350e2bf82b9ecbf3e7f48e7a09',
  id: '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4' } { local: true,
  broadcast: true,
  votes: 
   { height: 78364,
     id: '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:36:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78364
2020-09-04T03:36:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:36:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:36:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:36:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78364, '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0', '4ec5e0e5e1ff5209bcf588f8bfa7ded5c0b336eef29d00130289f345849b1284', 132113205, 79292, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '4672c4f2fd4d8bd5565199cf7c27f211d1b93e42e104e9f517c1c9586127c59e6ccb36fddc186fa5bf387db64b9e380499ad25350e2bf82b9ecbf3e7f48e7a09', '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4');
2020-09-04T03:36:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:36:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:36:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78364,
  prevBlockId: '7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0',
  pointId: '4ec5e0e5e1ff5209bcf588f8bfa7ded5c0b336eef29d00130289f345849b1284',
  timestamp: 132113205,
  pointHeight: 79292,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '4672c4f2fd4d8bd5565199cf7c27f211d1b93e42e104e9f517c1c9586127c59e6ccb36fddc186fa5bf387db64b9e380499ad25350e2bf82b9ecbf3e7f48e7a09',
  id: '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4' }
2020-09-04T03:36:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4 height: 78364
2020-09-04T03:36:50+0530 <info> round.js:66 () New dapp block id: 9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4 height: 78364 via point: 79292
2020-09-04T03:36:50+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T03:36:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T03:36:59+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79292 }
2020-09-04T03:36:59+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T03:36:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:36:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T03:36:59+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T03:36:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:37:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","height":78364,"prevBlockId":"7cc0550fda0d79d60eee8276f0a8aed36a1141a9bef3f5dc4bc6cfb5942cb7e0","pointId":"4ec5e0e5e1ff5209bcf588f8bfa7ded5c0b336eef29d00130289f345849b1284","timestamp":132113205,"pointHeight":79292,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"4672c4f2fd4d8bd5565199cf7c27f211d1b93e42e104e9f517c1c9586127c59e6ccb36fddc186fa5bf387db64b9e380499ad25350e2bf82b9ecbf3e7f48e7a09","id":"9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4"}, event = {"topic":"point","message":{"id":"8ae6b61d23a8098ed5e20396f7351051727461e4450cbdbf82a9514b92b8e866","height":79293}}
2020-09-04T03:37:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 9 func 
2020-09-04T03:37:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:37:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:37:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:37:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:37:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:37:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:37:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:37:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78365,
  prevBlockId: '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4',
  pointId: '8ae6b61d23a8098ed5e20396f7351051727461e4450cbdbf82a9514b92b8e866',
  timestamp: 132113220,
  pointHeight: 79293,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '9e49f7ce5f7919df87149a2190611a1289b4ffd1e9fc2ddedab801003d1d92e2a0830abc37bd184f239476ecc7d9e9be1f2a5dfbbd303094b569f5a7a7deb603',
  id: 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008' } { local: true,
  broadcast: true,
  votes: 
   { height: 78365,
     id: 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:37:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78365
2020-09-04T03:37:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:37:00+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T03:37:00+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T03:37:00+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15673
2020-09-04T03:37:00+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T03:37:00+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T03:37:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:37:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:37:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78365, '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4', '8ae6b61d23a8098ed5e20396f7351051727461e4450cbdbf82a9514b92b8e866', 132113220, 79293, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '9e49f7ce5f7919df87149a2190611a1289b4ffd1e9fc2ddedab801003d1d92e2a0830abc37bd184f239476ecc7d9e9be1f2a5dfbbd303094b569f5a7a7deb603', 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008');
2020-09-04T03:37:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:37:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:37:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78365,
  prevBlockId: '9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4',
  pointId: '8ae6b61d23a8098ed5e20396f7351051727461e4450cbdbf82a9514b92b8e866',
  timestamp: 132113220,
  pointHeight: 79293,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '9e49f7ce5f7919df87149a2190611a1289b4ffd1e9fc2ddedab801003d1d92e2a0830abc37bd184f239476ecc7d9e9be1f2a5dfbbd303094b569f5a7a7deb603',
  id: 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008' }
2020-09-04T03:37:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008 height: 78365
2020-09-04T03:37:00+0530 <info> round.js:66 () New dapp block id: c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008 height: 78365 via point: 79293
2020-09-04T03:37:00+0530 <debug> sequence.js:1 (i) Main sequence out 9 func 
2020-09-04T03:37:09+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 10 func 
2020-09-04T03:37:09+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79293 }
2020-09-04T03:37:09+0530 <debug> sequence.js:1 (i) Main sequence out 10 func 
2020-09-04T03:37:09+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:37:09+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 11 func 
2020-09-04T03:37:09+0530 <debug> sequence.js:1 (i) Main sequence out 11 func 
2020-09-04T03:37:09+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:37:19+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 12 func 
2020-09-04T03:37:19+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79293 }
2020-09-04T03:37:19+0530 <debug> sequence.js:1 (i) Main sequence out 12 func 
2020-09-04T03:37:19+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:37:19+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 13 func 
2020-09-04T03:37:19+0530 <debug> sequence.js:1 (i) Main sequence out 13 func 
2020-09-04T03:37:19+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:37:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","height":78365,"prevBlockId":"9a5433c0b482e135ae80790e46c54ac3744bf707f72ce9dc53165a0f279d79d4","pointId":"8ae6b61d23a8098ed5e20396f7351051727461e4450cbdbf82a9514b92b8e866","timestamp":132113220,"pointHeight":79293,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"9e49f7ce5f7919df87149a2190611a1289b4ffd1e9fc2ddedab801003d1d92e2a0830abc37bd184f239476ecc7d9e9be1f2a5dfbbd303094b569f5a7a7deb603","id":"c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008"}, event = {"topic":"point","message":{"id":"51d540ffc5c76196be4b23f21da8b843f542f4554d277a79365a0f42e6b4c5ec","height":79294}}
2020-09-04T03:37:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 14 func 
2020-09-04T03:37:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:37:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:37:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:37:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:37:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:37:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:37:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:37:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78366,
  prevBlockId: 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008',
  pointId: '51d540ffc5c76196be4b23f21da8b843f542f4554d277a79365a0f42e6b4c5ec',
  timestamp: 132113235,
  pointHeight: 79294,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'f07d26a9f821ead34712f7c1156553d2d494e4f98839b03620cdf3c57512e17cccf6e42486dad19cc92a0ccc2a78b377d3ddd2954724ab800e7c19cd8e06f807',
  id: 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869' } { local: true,
  broadcast: true,
  votes: 
   { height: 78366,
     id: 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:37:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78366
2020-09-04T03:37:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:37:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:37:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:37:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78366, 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008', '51d540ffc5c76196be4b23f21da8b843f542f4554d277a79365a0f42e6b4c5ec', 132113235, 79294, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'f07d26a9f821ead34712f7c1156553d2d494e4f98839b03620cdf3c57512e17cccf6e42486dad19cc92a0ccc2a78b377d3ddd2954724ab800e7c19cd8e06f807', 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869');
2020-09-04T03:37:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:37:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:37:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78366,
  prevBlockId: 'c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008',
  pointId: '51d540ffc5c76196be4b23f21da8b843f542f4554d277a79365a0f42e6b4c5ec',
  timestamp: 132113235,
  pointHeight: 79294,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'f07d26a9f821ead34712f7c1156553d2d494e4f98839b03620cdf3c57512e17cccf6e42486dad19cc92a0ccc2a78b377d3ddd2954724ab800e7c19cd8e06f807',
  id: 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869' }
2020-09-04T03:37:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869 height: 78366
2020-09-04T03:37:20+0530 <info> round.js:66 () New dapp block id: fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869 height: 78366 via point: 79294
2020-09-04T03:37:20+0530 <debug> sequence.js:1 (i) Main sequence out 14 func 
2020-09-04T03:37:29+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 15 func 
2020-09-04T03:37:29+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79294 }
2020-09-04T03:37:29+0530 <debug> sequence.js:1 (i) Main sequence out 15 func 
2020-09-04T03:37:29+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 16 func 
2020-09-04T03:37:29+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:37:29+0530 <debug> sequence.js:1 (i) Main sequence out 16 func 
2020-09-04T03:37:29+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:37:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","height":78366,"prevBlockId":"c8c9fd7ead05dab4018b23304a525e62cefd97f521773168171786c2b498b008","pointId":"51d540ffc5c76196be4b23f21da8b843f542f4554d277a79365a0f42e6b4c5ec","timestamp":132113235,"pointHeight":79294,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"f07d26a9f821ead34712f7c1156553d2d494e4f98839b03620cdf3c57512e17cccf6e42486dad19cc92a0ccc2a78b377d3ddd2954724ab800e7c19cd8e06f807","id":"fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869"}, event = {"topic":"point","message":{"id":"27f57490c5123aaafd633b5d5b3d5f7a569a2f2d31fb79bd0ef8985ab8f15dd4","height":79295}}
2020-09-04T03:37:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 17 func 
2020-09-04T03:37:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:37:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:37:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:37:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:37:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:37:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:37:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:37:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78367,
  prevBlockId: 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869',
  pointId: '27f57490c5123aaafd633b5d5b3d5f7a569a2f2d31fb79bd0ef8985ab8f15dd4',
  timestamp: 132113250,
  pointHeight: 79295,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '4f2daed23baa26e07cac2a94b6d859fb3e3f9549eb4f390dee0ba1747e2c54309b3fa1259824be43ac71ca19cd7a1a5444e7a288bfb4823ac154c6ba02640d0b',
  id: '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba' } { local: true,
  broadcast: true,
  votes: 
   { height: 78367,
     id: '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:37:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78367
2020-09-04T03:37:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:37:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:37:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:37:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78367, 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869', '27f57490c5123aaafd633b5d5b3d5f7a569a2f2d31fb79bd0ef8985ab8f15dd4', 132113250, 79295, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '4f2daed23baa26e07cac2a94b6d859fb3e3f9549eb4f390dee0ba1747e2c54309b3fa1259824be43ac71ca19cd7a1a5444e7a288bfb4823ac154c6ba02640d0b', '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba');
2020-09-04T03:37:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:37:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:37:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78367,
  prevBlockId: 'fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869',
  pointId: '27f57490c5123aaafd633b5d5b3d5f7a569a2f2d31fb79bd0ef8985ab8f15dd4',
  timestamp: 132113250,
  pointHeight: 79295,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '4f2daed23baa26e07cac2a94b6d859fb3e3f9549eb4f390dee0ba1747e2c54309b3fa1259824be43ac71ca19cd7a1a5444e7a288bfb4823ac154c6ba02640d0b',
  id: '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba' }
2020-09-04T03:37:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba height: 78367
2020-09-04T03:37:30+0530 <info> round.js:66 () New dapp block id: 785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba height: 78367 via point: 79295
2020-09-04T03:37:30+0530 <debug> sequence.js:1 (i) Main sequence out 17 func 
2020-09-04T03:37:39+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 18 func 
2020-09-04T03:37:39+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79295 }
2020-09-04T03:37:39+0530 <debug> sequence.js:1 (i) Main sequence out 18 func 
2020-09-04T03:37:39+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:37:39+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 19 func 
2020-09-04T03:37:39+0530 <debug> sequence.js:1 (i) Main sequence out 19 func 
2020-09-04T03:37:39+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:37:49+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 20 func 
2020-09-04T03:37:49+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79295 }
2020-09-04T03:37:49+0530 <debug> sequence.js:1 (i) Main sequence out 20 func 
2020-09-04T03:37:49+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:37:49+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 21 func 
2020-09-04T03:37:49+0530 <debug> sequence.js:1 (i) Main sequence out 21 func 
2020-09-04T03:37:49+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:37:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","height":78367,"prevBlockId":"fc6526682eaaf209c618f56a626792e964c2992577c484eb5a9e7ce9e9264869","pointId":"27f57490c5123aaafd633b5d5b3d5f7a569a2f2d31fb79bd0ef8985ab8f15dd4","timestamp":132113250,"pointHeight":79295,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"4f2daed23baa26e07cac2a94b6d859fb3e3f9549eb4f390dee0ba1747e2c54309b3fa1259824be43ac71ca19cd7a1a5444e7a288bfb4823ac154c6ba02640d0b","id":"785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba"}, event = {"topic":"point","message":{"id":"ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f","height":79296}}
2020-09-04T03:37:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 22 func 
2020-09-04T03:37:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:37:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:37:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:37:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:37:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:37:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:37:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:37:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78368,
  prevBlockId: '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba',
  pointId: 'ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f',
  timestamp: 132113265,
  pointHeight: 79296,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '3545a82a2dd2c609604a08ad6b62fdcead7808409312cffa42eb4a44b3ffc93f39b950d6224e3ee7f7116257c4a84b6b10694531847ace0e71d2d0553973b10b',
  id: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf' } { local: true,
  broadcast: true,
  votes: 
   { height: 78368,
     id: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:37:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78368
2020-09-04T03:37:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:37:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:37:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:37:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78368, '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba', 'ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f', 132113265, 79296, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '3545a82a2dd2c609604a08ad6b62fdcead7808409312cffa42eb4a44b3ffc93f39b950d6224e3ee7f7116257c4a84b6b10694531847ace0e71d2d0553973b10b', '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf');
2020-09-04T03:37:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:37:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:37:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78368,
  prevBlockId: '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba',
  pointId: 'ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f',
  timestamp: 132113265,
  pointHeight: 79296,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '3545a82a2dd2c609604a08ad6b62fdcead7808409312cffa42eb4a44b3ffc93f39b950d6224e3ee7f7116257c4a84b6b10694531847ace0e71d2d0553973b10b',
  id: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf' }
2020-09-04T03:37:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf height: 78368
2020-09-04T03:37:50+0530 <info> round.js:66 () New dapp block id: 1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf height: 78368 via point: 79296
2020-09-04T03:37:50+0530 <debug> sequence.js:1 (i) Main sequence out 22 func 
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:39:57+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:39:57+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:39:58+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:39:58+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:39:58+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:39:58+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:39:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:39:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:39:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:39:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:39:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:39:58+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:39:58+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:39:58+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78368
2020-09-04T03:39:58+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78368 and "blocks"."_deleted_" = 0; [ [ '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
    '132113265',
    '78368',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba',
    'ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f',
    '79296',
    '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
    '3545a82a2dd2c609604a08ad6b62fdcead7808409312cffa42eb4a44b3ffc93f39b950d6224e3ee7f7116257c4a84b6b10694531847ace0e71d2d0553973b10b',
    '0' ] ]
2020-09-04T03:39:58+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
  timestamp: 132113265,
  height: 78368,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba',
  pointId: 'ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f',
  pointHeight: 79296,
  delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  signature: '3545a82a2dd2c609604a08ad6b62fdcead7808409312cffa42eb4a44b3ffc93f39b950d6224e3ee7f7116257c4a84b6b10694531847ace0e71d2d0553973b10b',
  count: 0 }
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:39:58+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:39:58+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:39:58+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:39:58+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79296 }
2020-09-04T03:39:58+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:39:58+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:39:58+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:39:58+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:39:58+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:40:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf","timestamp":132113265,"height":78368,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"785d4196da83abf441d5872b8e6246962eeca63cfa1b1f3ef06cb4d3b69dbfba","pointId":"ade9afe178a2cd701059dae3a92e4705494e8194f10b1ec568c636d80ce1219f","pointHeight":79296,"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","signature":"3545a82a2dd2c609604a08ad6b62fdcead7808409312cffa42eb4a44b3ffc93f39b950d6224e3ee7f7116257c4a84b6b10694531847ace0e71d2d0553973b10b","count":0}, event = {"topic":"point","message":{"id":"79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b","height":79297}}
2020-09-04T03:40:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:40:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:40:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:40:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:40:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:40:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:40:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:40:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:40:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78369,
  prevBlockId: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
  pointId: '79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b',
  timestamp: 132113400,
  pointHeight: 79297,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '0ff0664ffc8b217803e76e3877f5671164140615f77d50b6030877708069a8714f55e49444bdb130d817741212666f57be7619679cf2c8a2fd767bdb9923e906',
  id: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913' } { local: true,
  broadcast: true,
  votes: 
   { height: 78369,
     id: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:40:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78369
2020-09-04T03:40:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:40:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:40:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:40:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78369, '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf', '79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b', 132113400, 79297, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '0ff0664ffc8b217803e76e3877f5671164140615f77d50b6030877708069a8714f55e49444bdb130d817741212666f57be7619679cf2c8a2fd767bdb9923e906', 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913');
2020-09-04T03:40:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:40:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:40:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78369,
  prevBlockId: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
  pointId: '79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b',
  timestamp: 132113400,
  pointHeight: 79297,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '0ff0664ffc8b217803e76e3877f5671164140615f77d50b6030877708069a8714f55e49444bdb130d817741212666f57be7619679cf2c8a2fd767bdb9923e906',
  id: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913' }
2020-09-04T03:40:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: d3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913 height: 78369
2020-09-04T03:40:00+0530 <info> round.js:66 () New dapp block id: d3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913 height: 78369 via point: 79297
2020-09-04T03:40:00+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:43:32+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:43:32+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:43:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:43:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:43:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:43:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:43:33+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:43:33+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:43:33+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:43:33+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78369
2020-09-04T03:43:33+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78369 and "blocks"."_deleted_" = 0; [ [ 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
    '132113400',
    '78369',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
    '79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b',
    '79297',
    '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
    '0ff0664ffc8b217803e76e3877f5671164140615f77d50b6030877708069a8714f55e49444bdb130d817741212666f57be7619679cf2c8a2fd767bdb9923e906',
    '0' ] ]
2020-09-04T03:43:33+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
  timestamp: 132113400,
  height: 78369,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf',
  pointId: '79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b',
  pointHeight: 79297,
  delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  signature: '0ff0664ffc8b217803e76e3877f5671164140615f77d50b6030877708069a8714f55e49444bdb130d817741212666f57be7619679cf2c8a2fd767bdb9923e906',
  count: 0 }
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:43:33+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:43:33+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:43:33+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:43:33+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79298 }
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:43:33+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:43:33+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:43:33+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:43:33+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:43:33+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:43:43+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:43:43+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79298 }
2020-09-04T03:43:43+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:43:43+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:43:43+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:43:43+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:43:43+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:43:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"d3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913","timestamp":132113400,"height":78369,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"1b4797965323742553cb20957606e14368fbede75e76c848ee341eee652e85bf","pointId":"79097a532aa9baf916a05ca1410655a5b86c166d4707e5149aaffa60d8a58f3b","pointHeight":79297,"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","signature":"0ff0664ffc8b217803e76e3877f5671164140615f77d50b6030877708069a8714f55e49444bdb130d817741212666f57be7619679cf2c8a2fd767bdb9923e906","count":0}, event = {"topic":"point","message":{"id":"4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe","height":79299}}
2020-09-04T03:43:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:43:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:43:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:43:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:43:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:43:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:43:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:43:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:43:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78370,
  prevBlockId: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
  pointId: '4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe',
  timestamp: 132113625,
  pointHeight: 79299,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '12410785177a66bfd3695b2c5de1a7ee5a2bc56a3aebc25086f5499b633226fc360a6c860957afa381b71b6e548b020dc1b8de542fbc7b9c82577bc9a40c110f',
  id: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa' } { local: true,
  broadcast: true,
  votes: 
   { height: 78370,
     id: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:43:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78370
2020-09-04T03:43:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:43:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T03:43:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T03:43:50+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15674
2020-09-04T03:43:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T03:43:50+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T03:43:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:43:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:43:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78370, 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913', '4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe', 132113625, 79299, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '12410785177a66bfd3695b2c5de1a7ee5a2bc56a3aebc25086f5499b633226fc360a6c860957afa381b71b6e548b020dc1b8de542fbc7b9c82577bc9a40c110f', 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa');
2020-09-04T03:43:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:43:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:43:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78370,
  prevBlockId: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
  pointId: '4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe',
  timestamp: 132113625,
  pointHeight: 79299,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '12410785177a66bfd3695b2c5de1a7ee5a2bc56a3aebc25086f5499b633226fc360a6c860957afa381b71b6e548b020dc1b8de542fbc7b9c82577bc9a40c110f',
  id: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa' }
2020-09-04T03:43:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa height: 78370
2020-09-04T03:43:50+0530 <info> round.js:66 () New dapp block id: de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa height: 78370 via point: 79299
2020-09-04T03:43:50+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:43:53+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T03:43:53+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79299 }
2020-09-04T03:43:53+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T03:43:53+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:43:53+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T03:43:53+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T03:43:53+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:46:23+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:46:23+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:46:24+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:46:24+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:46:24+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:46:24+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:46:24+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:46:24+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:46:24+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:46:24+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:46:24+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:46:24+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:46:24+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:46:24+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78370
2020-09-04T03:46:24+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78370 and "blocks"."_deleted_" = 0; [ [ 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
    '132113625',
    '78370',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
    '4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe',
    '79299',
    '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
    '12410785177a66bfd3695b2c5de1a7ee5a2bc56a3aebc25086f5499b633226fc360a6c860957afa381b71b6e548b020dc1b8de542fbc7b9c82577bc9a40c110f',
    '0' ] ]
2020-09-04T03:46:24+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
  timestamp: 132113625,
  height: 78370,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'd3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913',
  pointId: '4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe',
  pointHeight: 79299,
  delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  signature: '12410785177a66bfd3695b2c5de1a7ee5a2bc56a3aebc25086f5499b633226fc360a6c860957afa381b71b6e548b020dc1b8de542fbc7b9c82577bc9a40c110f',
  count: 0 }
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:46:24+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:46:24+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:46:24+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:46:24+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79300 }
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:46:24+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:46:24+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:46:24+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:46:24+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:46:24+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:46:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa","timestamp":132113625,"height":78370,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"d3c216d0756066ef3b2860e3bab6f5b87abc52d338c73280db60ac8d19ef4913","pointId":"4e3dc19e45f31f059bbe4d8070b364658823c2884ffe0f2fe22fb107cef81bbe","pointHeight":79299,"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","signature":"12410785177a66bfd3695b2c5de1a7ee5a2bc56a3aebc25086f5499b633226fc360a6c860957afa381b71b6e548b020dc1b8de542fbc7b9c82577bc9a40c110f","count":0}, event = {"topic":"point","message":{"id":"32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea","height":79301}}
2020-09-04T03:46:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:46:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:46:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:46:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:46:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:46:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:46:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:46:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:46:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78371,
  prevBlockId: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
  pointId: '32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea',
  timestamp: 132113790,
  pointHeight: 79301,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '69960b15d892cb0f8460249916b584ece33ca12b0673d4a82bdfcdaf5f323430bc1b9358d29bbda29cea9c189c86193233db1592e59e7ce2f86e1a3dcea75303',
  id: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3' } { local: true,
  broadcast: true,
  votes: 
   { height: 78371,
     id: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:46:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78371
2020-09-04T03:46:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:46:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:46:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:46:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78371, 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa', '32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea', 132113790, 79301, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '69960b15d892cb0f8460249916b584ece33ca12b0673d4a82bdfcdaf5f323430bc1b9358d29bbda29cea9c189c86193233db1592e59e7ce2f86e1a3dcea75303', '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3');
2020-09-04T03:46:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:46:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:46:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78371,
  prevBlockId: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
  pointId: '32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea',
  timestamp: 132113790,
  pointHeight: 79301,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '69960b15d892cb0f8460249916b584ece33ca12b0673d4a82bdfcdaf5f323430bc1b9358d29bbda29cea9c189c86193233db1592e59e7ce2f86e1a3dcea75303',
  id: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3' }
2020-09-04T03:46:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3 height: 78371
2020-09-04T03:46:30+0530 <info> round.js:66 () New dapp block id: 1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3 height: 78371 via point: 79301
2020-09-04T03:46:30+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:46:50+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:46:50+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:46:51+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:46:51+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:46:51+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:46:51+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:46:51+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:46:51+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:46:51+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:46:51+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:46:51+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:46:51+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:46:51+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:46:51+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78371
2020-09-04T03:46:51+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78371 and "blocks"."_deleted_" = 0; [ [ '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
    '132113790',
    '78371',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
    '32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea',
    '79301',
    'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
    '69960b15d892cb0f8460249916b584ece33ca12b0673d4a82bdfcdaf5f323430bc1b9358d29bbda29cea9c189c86193233db1592e59e7ce2f86e1a3dcea75303',
    '0' ] ]
2020-09-04T03:46:51+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
  timestamp: 132113790,
  height: 78371,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa',
  pointId: '32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea',
  pointHeight: 79301,
  delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  signature: '69960b15d892cb0f8460249916b584ece33ca12b0673d4a82bdfcdaf5f323430bc1b9358d29bbda29cea9c189c86193233db1592e59e7ce2f86e1a3dcea75303',
  count: 0 }
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:46:51+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:46:51+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:46:51+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:46:51+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79302 }
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:46:51+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:46:51+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:46:51+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:46:51+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:46:51+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:47:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3","timestamp":132113790,"height":78371,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"de7c735553910e46295cb447faa2bb7299388bed4ea0ce4b691dfec831090ffa","pointId":"32df856ff0715181a373e4fcdff0baf3a8997ce1ee87673e34a767abfff841ea","pointHeight":79301,"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","signature":"69960b15d892cb0f8460249916b584ece33ca12b0673d4a82bdfcdaf5f323430bc1b9358d29bbda29cea9c189c86193233db1592e59e7ce2f86e1a3dcea75303","count":0}, event = {"topic":"point","message":{"id":"5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc","height":79303}}
2020-09-04T03:47:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:47:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:47:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:47:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:47:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:47:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:47:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:47:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:47:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78372,
  prevBlockId: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
  pointId: '5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc',
  timestamp: 132113820,
  pointHeight: 79303,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'e7853437181dc4f75082745cc48f7863815cf17aee7a35ba4d475af8ef9b99ec94e06ddaa86ac646e5d1718caf5f9005b422463355c65b84f04fa3cd2c52cb09',
  id: '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e' } { local: true,
  broadcast: true,
  votes: 
   { height: 78372,
     id: '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:47:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78372
2020-09-04T03:47:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:47:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:47:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:47:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78372, '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3', '5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc', 132113820, 79303, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'e7853437181dc4f75082745cc48f7863815cf17aee7a35ba4d475af8ef9b99ec94e06ddaa86ac646e5d1718caf5f9005b422463355c65b84f04fa3cd2c52cb09', '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e');
2020-09-04T03:47:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:47:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:47:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78372,
  prevBlockId: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
  pointId: '5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc',
  timestamp: 132113820,
  pointHeight: 79303,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'e7853437181dc4f75082745cc48f7863815cf17aee7a35ba4d475af8ef9b99ec94e06ddaa86ac646e5d1718caf5f9005b422463355c65b84f04fa3cd2c52cb09',
  id: '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e' }
2020-09-04T03:47:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e height: 78372
2020-09-04T03:47:00+0530 <info> round.js:66 () New dapp block id: 19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e height: 78372 via point: 79303
2020-09-04T03:47:00+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:47:01+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:47:01+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79303 }
2020-09-04T03:47:01+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:47:01+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:47:01+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:47:01+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:47:01+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:48:53+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:48:53+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:48:53+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:48:53+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:48:53+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:48:53+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:48:53+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:48:53+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:48:53+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78372
2020-09-04T03:48:53+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78372 and "blocks"."_deleted_" = 0; [ [ '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e',
    '132113820',
    '78372',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
    '5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc',
    '79303',
    '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
    'e7853437181dc4f75082745cc48f7863815cf17aee7a35ba4d475af8ef9b99ec94e06ddaa86ac646e5d1718caf5f9005b422463355c65b84f04fa3cd2c52cb09',
    '0' ] ]
2020-09-04T03:48:53+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e',
  timestamp: 132113820,
  height: 78372,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3',
  pointId: '5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc',
  pointHeight: 79303,
  delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  signature: 'e7853437181dc4f75082745cc48f7863815cf17aee7a35ba4d475af8ef9b99ec94e06ddaa86ac646e5d1718caf5f9005b422463355c65b84f04fa3cd2c52cb09',
  count: 0 }
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:48:53+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:48:53+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:48:53+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:48:53+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79304 }
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:48:53+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:48:53+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:48:53+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:48:53+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:48:53+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:48:54+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:49:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e","timestamp":132113820,"height":78372,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"1248af30054bc5d3e0187c4a5baf8530ffdde74dc822df15f98031ec82cceaf3","pointId":"5eafebde8d51c66cfc5092737c26f0ad0345e7649d34c2652777f0f31c916abc","pointHeight":79303,"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","signature":"e7853437181dc4f75082745cc48f7863815cf17aee7a35ba4d475af8ef9b99ec94e06ddaa86ac646e5d1718caf5f9005b422463355c65b84f04fa3cd2c52cb09","count":0}, event = {"topic":"point","message":{"id":"abc62753493ac99e8cd83691edeb11c9fd062131209707b64173e52769aab053","height":79305}}
2020-09-04T03:49:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:49:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:49:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:49:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:49:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:49:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:49:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:49:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:49:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78373,
  prevBlockId: '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e',
  pointId: 'abc62753493ac99e8cd83691edeb11c9fd062131209707b64173e52769aab053',
  timestamp: 132113940,
  pointHeight: 79305,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '2060e42eee6ec7b3f8d0b8ae69c80403025a3af9bbdbb5205571440380316720c651c36b75c7e053aa0bb85324606bce4385d6f86329fbcd187eedd81002c201',
  id: '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6' } { local: true,
  broadcast: true,
  votes: 
   { height: 78373,
     id: '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:49:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78373
2020-09-04T03:49:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:49:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:49:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:49:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78373, '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e', 'abc62753493ac99e8cd83691edeb11c9fd062131209707b64173e52769aab053', 132113940, 79305, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '2060e42eee6ec7b3f8d0b8ae69c80403025a3af9bbdbb5205571440380316720c651c36b75c7e053aa0bb85324606bce4385d6f86329fbcd187eedd81002c201', '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6');
2020-09-04T03:49:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:49:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:49:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78373,
  prevBlockId: '19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e',
  pointId: 'abc62753493ac99e8cd83691edeb11c9fd062131209707b64173e52769aab053',
  timestamp: 132113940,
  pointHeight: 79305,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '2060e42eee6ec7b3f8d0b8ae69c80403025a3af9bbdbb5205571440380316720c651c36b75c7e053aa0bb85324606bce4385d6f86329fbcd187eedd81002c201',
  id: '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6' }
2020-09-04T03:49:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6 height: 78373
2020-09-04T03:49:00+0530 <info> round.js:66 () New dapp block id: 766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6 height: 78373 via point: 79305
2020-09-04T03:49:00+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:49:03+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:49:03+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79305 }
2020-09-04T03:49:03+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:49:03+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:49:03+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:49:03+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:49:03+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:49:13+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T03:49:13+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79305 }
2020-09-04T03:49:13+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T03:49:13+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:49:13+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T03:49:13+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T03:49:13+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:49:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","height":78373,"prevBlockId":"19cd2036f3c56995e1d95e05977ebbf037223693d6b23714044bda839f4ef01e","pointId":"abc62753493ac99e8cd83691edeb11c9fd062131209707b64173e52769aab053","timestamp":132113940,"pointHeight":79305,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"2060e42eee6ec7b3f8d0b8ae69c80403025a3af9bbdbb5205571440380316720c651c36b75c7e053aa0bb85324606bce4385d6f86329fbcd187eedd81002c201","id":"766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6"}, event = {"topic":"point","message":{"id":"db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877","height":79306}}
2020-09-04T03:49:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T03:49:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:49:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:49:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:49:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:49:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:49:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:49:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:49:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78374,
  prevBlockId: '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6',
  pointId: 'db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877',
  timestamp: 132113955,
  pointHeight: 79306,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '0494931764dae0a4aadc12af7e6a721a4a25b245454942f9e1884c3981cbbb78965d3441bd82d8cd9e73997a27a3ca59def997f004dc5bb28efd3b80ec7b3a0b',
  id: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809' } { local: true,
  broadcast: true,
  votes: 
   { height: 78374,
     id: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:49:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78374
2020-09-04T03:49:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:49:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:49:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:49:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78374, '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6', 'db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877', 132113955, 79306, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '0494931764dae0a4aadc12af7e6a721a4a25b245454942f9e1884c3981cbbb78965d3441bd82d8cd9e73997a27a3ca59def997f004dc5bb28efd3b80ec7b3a0b', 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809');
2020-09-04T03:49:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:49:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:49:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78374,
  prevBlockId: '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6',
  pointId: 'db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877',
  timestamp: 132113955,
  pointHeight: 79306,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '0494931764dae0a4aadc12af7e6a721a4a25b245454942f9e1884c3981cbbb78965d3441bd82d8cd9e73997a27a3ca59def997f004dc5bb28efd3b80ec7b3a0b',
  id: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809' }
2020-09-04T03:49:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809 height: 78374
2020-09-04T03:49:20+0530 <info> round.js:66 () New dapp block id: f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809 height: 78374 via point: 79306
2020-09-04T03:49:20+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T03:49:23+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 9 func 
2020-09-04T03:49:23+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79306 }
2020-09-04T03:49:23+0530 <debug> sequence.js:1 (i) Main sequence out 9 func 
2020-09-04T03:49:23+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:49:23+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 10 func 
2020-09-04T03:49:23+0530 <debug> sequence.js:1 (i) Main sequence out 10 func 
2020-09-04T03:49:23+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:50:01+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:50:01+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:50:02+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:50:02+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:50:02+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:50:02+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:50:02+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:50:02+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:50:02+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:50:02+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:50:02+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:50:02+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:50:02+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:50:02+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78374
2020-09-04T03:50:02+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78374 and "blocks"."_deleted_" = 0; [ [ 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
    '132113955',
    '78374',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6',
    'db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877',
    '79306',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '0494931764dae0a4aadc12af7e6a721a4a25b245454942f9e1884c3981cbbb78965d3441bd82d8cd9e73997a27a3ca59def997f004dc5bb28efd3b80ec7b3a0b',
    '0' ] ]
2020-09-04T03:50:02+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
  timestamp: 132113955,
  height: 78374,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6',
  pointId: 'db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877',
  pointHeight: 79306,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '0494931764dae0a4aadc12af7e6a721a4a25b245454942f9e1884c3981cbbb78965d3441bd82d8cd9e73997a27a3ca59def997f004dc5bb28efd3b80ec7b3a0b',
  count: 0 }
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:50:02+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:50:02+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:50:02+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:50:02+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79307 }
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:50:02+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:50:02+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:50:02+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:50:02+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:50:02+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:50:12+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:50:12+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79307 }
2020-09-04T03:50:12+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:50:12+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:50:12+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:50:12+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:50:12+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:50:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809","timestamp":132113955,"height":78374,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"766a4ddc99916dc72c16393de40d8fd77584fb8f05c1c0020c43a3026ec1b8a6","pointId":"db86fcffee402d953bc1a6c0fe5091ec42ad005d3f6c00c18650c40c164a6877","pointHeight":79306,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"0494931764dae0a4aadc12af7e6a721a4a25b245454942f9e1884c3981cbbb78965d3441bd82d8cd9e73997a27a3ca59def997f004dc5bb28efd3b80ec7b3a0b","count":0}, event = {"topic":"point","message":{"id":"271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac","height":79308}}
2020-09-04T03:50:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:50:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:50:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:50:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:50:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:50:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:50:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:50:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:50:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78375,
  prevBlockId: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
  pointId: '271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac',
  timestamp: 132114015,
  pointHeight: 79308,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '03e8e7d733e852aa2182d0d3bb3cc29b09f615eece1da8544fc2dc0762c994047c0027aa33be6b65327f633159cd9f82f0711e1f5798c9f7c51587e8a871d60e',
  id: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b' } { local: true,
  broadcast: true,
  votes: 
   { height: 78375,
     id: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:50:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78375
2020-09-04T03:50:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:50:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T03:50:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T03:50:20+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15675
2020-09-04T03:50:20+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T03:50:20+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T03:50:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:50:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:50:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78375, 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809', '271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac', 132114015, 79308, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '03e8e7d733e852aa2182d0d3bb3cc29b09f615eece1da8544fc2dc0762c994047c0027aa33be6b65327f633159cd9f82f0711e1f5798c9f7c51587e8a871d60e', 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b');
2020-09-04T03:50:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:50:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:50:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78375,
  prevBlockId: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
  pointId: '271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac',
  timestamp: 132114015,
  pointHeight: 79308,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '03e8e7d733e852aa2182d0d3bb3cc29b09f615eece1da8544fc2dc0762c994047c0027aa33be6b65327f633159cd9f82f0711e1f5798c9f7c51587e8a871d60e',
  id: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b' }
2020-09-04T03:50:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b height: 78375
2020-09-04T03:50:20+0530 <info> round.js:66 () New dapp block id: b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b height: 78375 via point: 79308
2020-09-04T03:50:20+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:50:22+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T03:50:22+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79308 }
2020-09-04T03:50:22+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T03:50:22+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:50:22+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T03:50:22+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T03:50:22+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:51:21+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T03:51:21+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T03:51:22+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T03:51:22+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T03:51:22+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T03:51:22+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T03:51:22+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T03:51:22+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T03:51:22+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T03:51:22+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T03:51:22+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78375
2020-09-04T03:51:22+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78375 and "blocks"."_deleted_" = 0; [ [ 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
    '132114015',
    '78375',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
    '271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac',
    '79308',
    'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
    '03e8e7d733e852aa2182d0d3bb3cc29b09f615eece1da8544fc2dc0762c994047c0027aa33be6b65327f633159cd9f82f0711e1f5798c9f7c51587e8a871d60e',
    '0' ] ]
2020-09-04T03:51:22+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
  timestamp: 132114015,
  height: 78375,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809',
  pointId: '271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac',
  pointHeight: 79308,
  delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  signature: '03e8e7d733e852aa2182d0d3bb3cc29b09f615eece1da8544fc2dc0762c994047c0027aa33be6b65327f633159cd9f82f0711e1f5798c9f7c51587e8a871d60e',
  count: 0 }
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T03:51:22+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T03:51:22+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T03:51:22+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T03:51:22+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79309 }
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T03:51:22+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T03:51:22+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T03:51:22+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T03:51:22+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T03:51:22+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T03:51:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b","timestamp":132114015,"height":78375,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"f666ba4c19929770f06b1bccdd4f89e88f8285afda4d645676b7e71bcf110809","pointId":"271dcc29ffed87637dc195d4bae727468f4601fad3d63dc12f8756194be38aac","pointHeight":79308,"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","signature":"03e8e7d733e852aa2182d0d3bb3cc29b09f615eece1da8544fc2dc0762c994047c0027aa33be6b65327f633159cd9f82f0711e1f5798c9f7c51587e8a871d60e","count":0}, event = {"topic":"point","message":{"id":"30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729","height":79310}}
2020-09-04T03:51:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T03:51:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T03:51:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T03:51:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T03:51:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T03:51:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T03:51:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T03:51:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T03:51:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78376,
  prevBlockId: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
  pointId: '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729',
  timestamp: 132114090,
  pointHeight: 79310,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401',
  id: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49' } { local: true,
  broadcast: true,
  votes: 
   { height: 78376,
     id: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T03:51:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78376
2020-09-04T03:51:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T03:51:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T03:51:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T03:51:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78376, 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b', '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729', 132114090, 79310, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401', 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49');
2020-09-04T03:51:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T03:51:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T03:51:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78376,
  prevBlockId: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
  pointId: '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729',
  timestamp: 132114090,
  pointHeight: 79310,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401',
  id: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49' }
2020-09-04T03:51:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49 height: 78376
2020-09-04T03:51:30+0530 <info> round.js:66 () New dapp block id: f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49 height: 78376 via point: 79310
2020-09-04T03:51:30+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T03:51:32+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T03:51:32+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79310 }
2020-09-04T03:51:32+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T03:51:32+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T03:51:32+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T03:51:32+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T03:51:32+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:03:42+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:03:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:03:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:03:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:03:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:03:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:03:42+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:03:42+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:03:42+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78376
2020-09-04T04:03:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78376 and "blocks"."_deleted_" = 0; [ [ 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
    '132114090',
    '78376',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
    '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729',
    '79310',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401',
    '0' ] ]
2020-09-04T04:03:42+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
  timestamp: 132114090,
  height: 78376,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
  pointId: '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729',
  pointHeight: 79310,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401',
  count: 0 }
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:03:42+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:03:42+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:03:42+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:03:42+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79311 }
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:03:42+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:03:42+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:03:42+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:03:42+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:03:42+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:04:59+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:04:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:04:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:04:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:04:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:04:59+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:04:59+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:04:59+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:04:59+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78376
2020-09-04T04:04:59+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78376 and "blocks"."_deleted_" = 0; [ [ 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
    '132114090',
    '78376',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
    '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729',
    '79310',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401',
    '0' ] ]
2020-09-04T04:04:59+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
  timestamp: 132114090,
  height: 78376,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b',
  pointId: '30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729',
  pointHeight: 79310,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401',
  count: 0 }
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:04:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:04:59+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:04:59+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:04:59+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79311 }
2020-09-04T04:04:59+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:04:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:04:59+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:04:59+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:04:59+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:05:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49","timestamp":132114090,"height":78376,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"b2ba881a7c8ba85a5b2f7d539cac9f02f0ebf4b9a562144700ee8740e13ffd8b","pointId":"30c93423ec14c334817ed839697f74c270f7f7237e86e5eb0d02820caf8ca729","pointHeight":79310,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"85e7026792e87983a8c78f19530a7b2b33f50addbca51982c4e9ef8c055149e101415f4323c05773cb80c41844acb58afe2269fbc6349334ddae481f10e13401","count":0}, event = {"topic":"point","message":{"id":"ed6137f5735083c5cc6662eea45a7f9e178577a3a75e4212c4b35d4d5f1637db","height":79312}}
2020-09-04T04:05:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T04:05:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:05:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:05:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:05:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:05:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:05:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:05:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:05:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78377,
  prevBlockId: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
  pointId: 'ed6137f5735083c5cc6662eea45a7f9e178577a3a75e4212c4b35d4d5f1637db',
  timestamp: 132114900,
  pointHeight: 79312,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '77a6a949562370542274d4ed8bedc7edd89626cbbf30ccf5d40cb904ad41d38aac1a00df48a0387021ebe9ae3662175eb4e5b5b3cce60a45f79d1d2e21240004',
  id: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40' } { local: true,
  broadcast: true,
  votes: 
   { height: 78377,
     id: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:05:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78377
2020-09-04T04:05:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:05:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:05:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:05:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78377, 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49', 'ed6137f5735083c5cc6662eea45a7f9e178577a3a75e4212c4b35d4d5f1637db', 132114900, 79312, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '77a6a949562370542274d4ed8bedc7edd89626cbbf30ccf5d40cb904ad41d38aac1a00df48a0387021ebe9ae3662175eb4e5b5b3cce60a45f79d1d2e21240004', '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40');
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:05:17+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:05:17+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:05:18+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:05:18+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:05:18+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:05:18+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:05:18+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:05:18+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:05:18+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:05:18+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:05:18+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:05:18+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:05:18+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:05:18+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78377
2020-09-04T04:05:18+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78377 and "blocks"."_deleted_" = 0; [ [ '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
    '132114900',
    '78377',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
    'ed6137f5735083c5cc6662eea45a7f9e178577a3a75e4212c4b35d4d5f1637db',
    '79312',
    '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
    '77a6a949562370542274d4ed8bedc7edd89626cbbf30ccf5d40cb904ad41d38aac1a00df48a0387021ebe9ae3662175eb4e5b5b3cce60a45f79d1d2e21240004',
    '0' ] ]
2020-09-04T04:05:18+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
  timestamp: 132114900,
  height: 78377,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49',
  pointId: 'ed6137f5735083c5cc6662eea45a7f9e178577a3a75e4212c4b35d4d5f1637db',
  pointHeight: 79312,
  delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  signature: '77a6a949562370542274d4ed8bedc7edd89626cbbf30ccf5d40cb904ad41d38aac1a00df48a0387021ebe9ae3662175eb4e5b5b3cce60a45f79d1d2e21240004',
  count: 0 }
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:05:18+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:05:18+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:05:18+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:05:18+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79312 }
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:05:18+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:05:18+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:05:18+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:05:18+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:05:18+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:05:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40","timestamp":132114900,"height":78377,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"f46578efb27fc8ea237b255e62ceede30dd652e47b4be7b2d10da6cded922e49","pointId":"ed6137f5735083c5cc6662eea45a7f9e178577a3a75e4212c4b35d4d5f1637db","pointHeight":79312,"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","signature":"77a6a949562370542274d4ed8bedc7edd89626cbbf30ccf5d40cb904ad41d38aac1a00df48a0387021ebe9ae3662175eb4e5b5b3cce60a45f79d1d2e21240004","count":0}, event = {"topic":"point","message":{"id":"3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221","height":79313}}
2020-09-04T04:05:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T04:05:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:05:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:05:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:05:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:05:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:05:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:05:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:05:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78378,
  prevBlockId: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
  pointId: '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221',
  timestamp: 132114915,
  pointHeight: 79313,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200',
  id: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5' } { local: true,
  broadcast: true,
  votes: 
   { height: 78378,
     id: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:05:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78378
2020-09-04T04:05:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:05:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:05:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:05:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78378, '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40', '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221', 132114915, 79313, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200', 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5');
2020-09-04T04:05:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:05:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:05:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78378,
  prevBlockId: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
  pointId: '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221',
  timestamp: 132114915,
  pointHeight: 79313,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200',
  id: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5' }
2020-09-04T04:05:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5 height: 78378
2020-09-04T04:05:20+0530 <info> round.js:66 () New dapp block id: ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5 height: 78378 via point: 79313
2020-09-04T04:05:20+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:05:59+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:05:59+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:06:00+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:06:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:06:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:06:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:06:00+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:06:00+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:06:00+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:06:00+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:06:00+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:06:00+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:06:00+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:06:00+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78378
2020-09-04T04:06:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78378 and "blocks"."_deleted_" = 0; [ [ 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
    '132114915',
    '78378',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
    '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221',
    '79313',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200',
    '0' ] ]
2020-09-04T04:06:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
  timestamp: 132114915,
  height: 78378,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
  pointId: '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221',
  pointHeight: 79313,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: 'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200',
  count: 0 }
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:06:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:06:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:06:00+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:06:00+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79314 }
2020-09-04T04:06:00+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:06:00+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:06:00+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:06:00+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:06:00+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:06:25+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:06:25+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:06:26+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:06:26+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:06:26+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:06:26+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:06:26+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:06:26+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:06:26+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:06:26+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:06:26+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:06:26+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:06:26+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:06:26+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78378
2020-09-04T04:06:26+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78378 and "blocks"."_deleted_" = 0; [ [ 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
    '132114915',
    '78378',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
    '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221',
    '79313',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200',
    '0' ] ]
2020-09-04T04:06:26+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
  timestamp: 132114915,
  height: 78378,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40',
  pointId: '3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221',
  pointHeight: 79313,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: 'c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200',
  count: 0 }
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:06:26+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:06:26+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:06:26+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:06:26+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79314 }
2020-09-04T04:06:26+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:06:26+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:06:26+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:06:26+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:06:26+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:06:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5","timestamp":132114915,"height":78378,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"70ed88f5bc345ec57bebc492231fcab979d4c1c7fbc59b3ff4cebf5471d69a40","pointId":"3e7ca98d7ad67b25befd0674061441e17eb2fb36d9eb06ecec6dcb571b3ce221","pointHeight":79313,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"c814f9ed48a55885e42a0aa7b1084a68e5552fb4a9f9b3bc36448721a653e2d7df415f1fa7bb69058983dcac5e760953df131dd36db9bf6426cc5aa017dae200","count":0}, event = {"topic":"point","message":{"id":"c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef","height":79315}}
2020-09-04T04:06:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T04:06:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:06:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:06:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:06:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:06:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:06:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:06:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:06:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78379,
  prevBlockId: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
  pointId: 'c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef',
  timestamp: 132114990,
  pointHeight: 79315,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '384ed3c022717c32e9e8d59d434c90d65042b4b0c6756d942ba364e137dda997464968bb0b93e7231d327780827e78bfc484e7d9f831ea45be240bcc848c6d0c',
  id: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932' } { local: true,
  broadcast: true,
  votes: 
   { height: 78379,
     id: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:06:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78379
2020-09-04T04:06:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:06:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:06:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:06:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78379, 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5', 'c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef', 132114990, 79315, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '384ed3c022717c32e9e8d59d434c90d65042b4b0c6756d942ba364e137dda997464968bb0b93e7231d327780827e78bfc484e7d9f831ea45be240bcc848c6d0c', '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932');
2020-09-04T04:06:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:06:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:06:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78379,
  prevBlockId: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
  pointId: 'c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef',
  timestamp: 132114990,
  pointHeight: 79315,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '384ed3c022717c32e9e8d59d434c90d65042b4b0c6756d942ba364e137dda997464968bb0b93e7231d327780827e78bfc484e7d9f831ea45be240bcc848c6d0c',
  id: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932' }
2020-09-04T04:06:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932 height: 78379
2020-09-04T04:06:30+0530 <info> round.js:66 () New dapp block id: 6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932 height: 78379 via point: 79315
2020-09-04T04:06:30+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T04:06:36+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T04:06:36+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79315 }
2020-09-04T04:06:36+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T04:06:36+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:06:36+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T04:06:36+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T04:06:36+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:07:40+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:07:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:07:41+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:07:41+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:07:41+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:07:41+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:07:41+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:07:41+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:07:41+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:07:41+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78379
2020-09-04T04:07:41+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78379 and "blocks"."_deleted_" = 0; [ [ '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
    '132114990',
    '78379',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
    'c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef',
    '79315',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '384ed3c022717c32e9e8d59d434c90d65042b4b0c6756d942ba364e137dda997464968bb0b93e7231d327780827e78bfc484e7d9f831ea45be240bcc848c6d0c',
    '0' ] ]
2020-09-04T04:07:41+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
  timestamp: 132114990,
  height: 78379,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5',
  pointId: 'c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef',
  pointHeight: 79315,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '384ed3c022717c32e9e8d59d434c90d65042b4b0c6756d942ba364e137dda997464968bb0b93e7231d327780827e78bfc484e7d9f831ea45be240bcc848c6d0c',
  count: 0 }
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:07:41+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:07:41+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:07:41+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:07:41+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79316 }
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:07:41+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:07:41+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:07:41+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:07:41+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:07:41+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:07:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932","timestamp":132114990,"height":78379,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"ccd2e81aff0fb56f0a2385f25a66c8d83adb16706dc2e9ff7e436eba6e5fe9d5","pointId":"c52223fbb4936474e04b60a616e1a1526788607c54456d5640a71388662e24ef","pointHeight":79315,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"384ed3c022717c32e9e8d59d434c90d65042b4b0c6756d942ba364e137dda997464968bb0b93e7231d327780827e78bfc484e7d9f831ea45be240bcc848c6d0c","count":0}, event = {"topic":"point","message":{"id":"b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed","height":79317}}
2020-09-04T04:07:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T04:07:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:07:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:07:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:07:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:07:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:07:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:07:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:07:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78380,
  prevBlockId: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
  pointId: 'b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed',
  timestamp: 132115065,
  pointHeight: 79317,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '33867fc6d7381052f0558ad5d222b4bd870049c0a281374694a0bbf522c8a2527bd3de0e4b4364775de2cb319a7a990cdb356cbb3f4a4e7f25fa1268fa344f03',
  id: '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e' } { local: true,
  broadcast: true,
  votes: 
   { height: 78380,
     id: '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:07:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78380
2020-09-04T04:07:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:07:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T04:07:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T04:07:50+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15676
2020-09-04T04:07:50+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T04:07:50+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T04:07:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:07:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:07:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78380, '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932', 'b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed', 132115065, 79317, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '33867fc6d7381052f0558ad5d222b4bd870049c0a281374694a0bbf522c8a2527bd3de0e4b4364775de2cb319a7a990cdb356cbb3f4a4e7f25fa1268fa344f03', '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e');
2020-09-04T04:07:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:07:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:07:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78380,
  prevBlockId: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
  pointId: 'b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed',
  timestamp: 132115065,
  pointHeight: 79317,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '33867fc6d7381052f0558ad5d222b4bd870049c0a281374694a0bbf522c8a2527bd3de0e4b4364775de2cb319a7a990cdb356cbb3f4a4e7f25fa1268fa344f03',
  id: '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e' }
2020-09-04T04:07:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e height: 78380
2020-09-04T04:07:50+0530 <info> round.js:66 () New dapp block id: 4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e height: 78380 via point: 79317
2020-09-04T04:07:50+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T04:07:51+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T04:07:51+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79317 }
2020-09-04T04:07:51+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T04:07:51+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:07:51+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T04:07:51+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T04:07:51+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model account.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model block.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model department.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model template.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-04T04:13:36+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-04T04:13:36+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-04T04:13:37+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-04T04:13:37+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-04T04:13:37+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-04T04:13:37+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-04T04:13:37+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-04T04:13:37+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-04T04:13:37+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-04T04:13:37+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-04T04:13:37+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-04T04:13:37+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-04T04:13:37+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-04T04:13:37+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78380
2020-09-04T04:13:37+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78380 and "blocks"."_deleted_" = 0; [ [ '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e',
    '132115065',
    '78380',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
    'b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed',
    '79317',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '33867fc6d7381052f0558ad5d222b4bd870049c0a281374694a0bbf522c8a2527bd3de0e4b4364775de2cb319a7a990cdb356cbb3f4a4e7f25fa1268fa344f03',
    '0' ] ]
2020-09-04T04:13:37+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e',
  timestamp: 132115065,
  height: 78380,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932',
  pointId: 'b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed',
  pointHeight: 79317,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '33867fc6d7381052f0558ad5d222b4bd870049c0a281374694a0bbf522c8a2527bd3de0e4b4364775de2cb319a7a990cdb356cbb3f4a4e7f25fa1268fa344f03',
  count: 0 }
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-04T04:13:37+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-04T04:13:37+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-04T04:13:37+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-04T04:13:37+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79317 }
2020-09-04T04:13:37+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-04T04:13:37+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-04T04:13:37+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-04T04:13:37+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employees
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getToken
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /contracts
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /transfers
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /totals1
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuers
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /department/define
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /department/get
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-04T04:13:37+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-04T04:13:40+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e","timestamp":132115065,"height":78380,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"6901d5292dd6388f3c16e46de0a9a73a25eb7605813cd538173fe7fd1e381932","pointId":"b8e3b6c14dbf9e1f3706dbe9b6cec0e9029d1781c6c4b3c2cca2fe8c8edf1bed","pointHeight":79317,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"33867fc6d7381052f0558ad5d222b4bd870049c0a281374694a0bbf522c8a2527bd3de0e4b4364775de2cb319a7a990cdb356cbb3f4a4e7f25fa1268fa344f03","count":0}, event = {"topic":"point","message":{"id":"dbf51715c75e02fcc596a6c6d29dd5c61d7e95d38f400aba7387467a90e56e7e","height":79318}}
2020-09-04T04:13:40+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-04T04:13:40+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:13:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:13:40+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:13:40+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:13:40+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:13:40+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:13:40+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:13:40+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78381,
  prevBlockId: '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e',
  pointId: 'dbf51715c75e02fcc596a6c6d29dd5c61d7e95d38f400aba7387467a90e56e7e',
  timestamp: 132115410,
  pointHeight: 79318,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '11bef3af273f4170cc3d2ccc826c2aa897fde3c9269828d00da5dd13e63c2ecb06c1ce3a81d4ab3660ef038ccb79eb4db5fc241accee4916bfaf3221b0114601',
  id: '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb' } { local: true,
  broadcast: true,
  votes: 
   { height: 78381,
     id: '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:13:40+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78381
2020-09-04T04:13:40+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:13:40+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:13:40+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:13:40+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd', 78381, '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e', 'dbf51715c75e02fcc596a6c6d29dd5c61d7e95d38f400aba7387467a90e56e7e', 132115410, 79318, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '11bef3af273f4170cc3d2ccc826c2aa897fde3c9269828d00da5dd13e63c2ecb06c1ce3a81d4ab3660ef038ccb79eb4db5fc241accee4916bfaf3221b0114601', '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb');
2020-09-04T04:13:40+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:13:40+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:13:40+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
  height: 78381,
  prevBlockId: '4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e',
  pointId: 'dbf51715c75e02fcc596a6c6d29dd5c61d7e95d38f400aba7387467a90e56e7e',
  timestamp: 132115410,
  pointHeight: 79318,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '11bef3af273f4170cc3d2ccc826c2aa897fde3c9269828d00da5dd13e63c2ecb06c1ce3a81d4ab3660ef038ccb79eb4db5fc241accee4916bfaf3221b0114601',
  id: '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb' }
2020-09-04T04:13:40+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb height: 78381
2020-09-04T04:13:40+0530 <info> round.js:66 () New dapp block id: 57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb height: 78381 via point: 79318
2020-09-04T04:13:40+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-04T04:13:47+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-04T04:13:47+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79318 }
2020-09-04T04:13:47+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-04T04:13:47+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-04T04:13:47+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:13:47+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-04T04:13:47+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:13:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd","height":78381,"prevBlockId":"4597af32703127f1402f6557bfa72dd0bf2a6c2f2098dcc529804b14ff9ea57e","pointId":"dbf51715c75e02fcc596a6c6d29dd5c61d7e95d38f400aba7387467a90e56e7e","timestamp":132115410,"pointHeight":79318,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"11bef3af273f4170cc3d2ccc826c2aa897fde3c9269828d00da5dd13e63c2ecb06c1ce3a81d4ab3660ef038ccb79eb4db5fc241accee4916bfaf3221b0114601","id":"57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb"}, event = {"topic":"point","message":{"id":"2ecf3a97bee59603272ad9800af3925b289d45d85964aaabf6e115db6537d6df","height":79319}}
2020-09-04T04:13:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-04T04:13:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:13:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:13:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:13:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:13:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:13:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:13:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:13:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78382,
  prevBlockId: '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb',
  pointId: '2ecf3a97bee59603272ad9800af3925b289d45d85964aaabf6e115db6537d6df',
  timestamp: 132115425,
  pointHeight: 79319,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '67c2ffc06a1306362f7237451dc52563701801e26478df61785b52ddc88a9e55758601c6ec7d7c22c45e92f1b4c575874ac7dcf31560880612d7640a4239020b',
  id: '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757' } { local: true,
  broadcast: true,
  votes: 
   { height: 78382,
     id: '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:13:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78382
2020-09-04T04:13:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:13:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:13:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:13:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b', 78382, '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb', '2ecf3a97bee59603272ad9800af3925b289d45d85964aaabf6e115db6537d6df', 132115425, 79319, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '67c2ffc06a1306362f7237451dc52563701801e26478df61785b52ddc88a9e55758601c6ec7d7c22c45e92f1b4c575874ac7dcf31560880612d7640a4239020b', '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757');
2020-09-04T04:13:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:13:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:13:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: 'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
  height: 78382,
  prevBlockId: '57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb',
  pointId: '2ecf3a97bee59603272ad9800af3925b289d45d85964aaabf6e115db6537d6df',
  timestamp: 132115425,
  pointHeight: 79319,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '67c2ffc06a1306362f7237451dc52563701801e26478df61785b52ddc88a9e55758601c6ec7d7c22c45e92f1b4c575874ac7dcf31560880612d7640a4239020b',
  id: '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757' }
2020-09-04T04:13:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757 height: 78382
2020-09-04T04:13:50+0530 <info> round.js:66 () New dapp block id: 2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757 height: 78382 via point: 79319
2020-09-04T04:13:50+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-04T04:13:57+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 7 func 
2020-09-04T04:13:57+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79319 }
2020-09-04T04:13:57+0530 <debug> sequence.js:1 (i) Main sequence out 7 func 
2020-09-04T04:13:57+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 8 func 
2020-09-04T04:13:57+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:13:57+0530 <debug> sequence.js:1 (i) Main sequence out 8 func 
2020-09-04T04:13:57+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:14:00+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b","height":78382,"prevBlockId":"57ff9c1f86d0b824c820af3297f520afbef5d79f9f707e8bc255e46e41f5a7bb","pointId":"2ecf3a97bee59603272ad9800af3925b289d45d85964aaabf6e115db6537d6df","timestamp":132115425,"pointHeight":79319,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"67c2ffc06a1306362f7237451dc52563701801e26478df61785b52ddc88a9e55758601c6ec7d7c22c45e92f1b4c575874ac7dcf31560880612d7640a4239020b","id":"2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757"}, event = {"topic":"point","message":{"id":"cf54c8666e07a4db35b1707d1d8ee4d10ed0941784e7f8d984aba919f32eabd2","height":79320}}
2020-09-04T04:14:00+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 9 func 
2020-09-04T04:14:00+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:14:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:14:00+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:14:00+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:14:00+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:14:00+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:14:00+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:14:00+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78383,
  prevBlockId: '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757',
  pointId: 'cf54c8666e07a4db35b1707d1d8ee4d10ed0941784e7f8d984aba919f32eabd2',
  timestamp: 132115440,
  pointHeight: 79320,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '6b99dc14d130c7f5471214838c2d9410b9366656f821b626d8f30139954161aa7a4002c00307cdc09643f1f321dc2052db793ad0ac6183b74f44c1d0c27a590d',
  id: 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1' } { local: true,
  broadcast: true,
  votes: 
   { height: 78383,
     id: 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:14:00+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78383
2020-09-04T04:14:00+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:14:00+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:14:00+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:14:00+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78383, '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757', 'cf54c8666e07a4db35b1707d1d8ee4d10ed0941784e7f8d984aba919f32eabd2', 132115440, 79320, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '6b99dc14d130c7f5471214838c2d9410b9366656f821b626d8f30139954161aa7a4002c00307cdc09643f1f321dc2052db793ad0ac6183b74f44c1d0c27a590d', 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1');
2020-09-04T04:14:00+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:14:00+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:14:00+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78383,
  prevBlockId: '2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757',
  pointId: 'cf54c8666e07a4db35b1707d1d8ee4d10ed0941784e7f8d984aba919f32eabd2',
  timestamp: 132115440,
  pointHeight: 79320,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '6b99dc14d130c7f5471214838c2d9410b9366656f821b626d8f30139954161aa7a4002c00307cdc09643f1f321dc2052db793ad0ac6183b74f44c1d0c27a590d',
  id: 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1' }
2020-09-04T04:14:00+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1 height: 78383
2020-09-04T04:14:00+0530 <info> round.js:66 () New dapp block id: fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1 height: 78383 via point: 79320
2020-09-04T04:14:00+0530 <debug> sequence.js:1 (i) Main sequence out 9 func 
2020-09-04T04:14:07+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 10 func 
2020-09-04T04:14:07+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79320 }
2020-09-04T04:14:07+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 11 func 
2020-09-04T04:14:07+0530 <debug> sequence.js:1 (i) Main sequence out 10 func 
2020-09-04T04:14:07+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:14:07+0530 <debug> sequence.js:1 (i) Main sequence out 11 func 
2020-09-04T04:14:07+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:14:17+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 12 func 
2020-09-04T04:14:17+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79320 }
2020-09-04T04:14:17+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 13 func 
2020-09-04T04:14:17+0530 <debug> sequence.js:1 (i) Main sequence out 12 func 
2020-09-04T04:14:17+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:14:17+0530 <debug> sequence.js:1 (i) Main sequence out 13 func 
2020-09-04T04:14:17+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:14:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","height":78383,"prevBlockId":"2f5c7770182ab4852914f907c070384906b8ed17515c6852582ee50d9c5e4757","pointId":"cf54c8666e07a4db35b1707d1d8ee4d10ed0941784e7f8d984aba919f32eabd2","timestamp":132115440,"pointHeight":79320,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"6b99dc14d130c7f5471214838c2d9410b9366656f821b626d8f30139954161aa7a4002c00307cdc09643f1f321dc2052db793ad0ac6183b74f44c1d0c27a590d","id":"fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1"}, event = {"topic":"point","message":{"id":"76d33feeb7a028c2857eda47165040f25c91461530119d61281c7e279e0d4b4b","height":79321}}
2020-09-04T04:14:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 14 func 
2020-09-04T04:14:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:14:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:14:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:14:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:14:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:14:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:14:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:14:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78384,
  prevBlockId: 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1',
  pointId: '76d33feeb7a028c2857eda47165040f25c91461530119d61281c7e279e0d4b4b',
  timestamp: 132115455,
  pointHeight: 79321,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '04357cb0d3d9267b5304c151b7e371ac136a8a476e1fac522171b03946bc924af201f309284adc757cdbf3cb2a9ffeaecf060b2a47c7379ac59dbc7399d5de09',
  id: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377' } { local: true,
  broadcast: true,
  votes: 
   { height: 78384,
     id: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:14:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78384
2020-09-04T04:14:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:14:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:14:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:14:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4', 78384, 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1', '76d33feeb7a028c2857eda47165040f25c91461530119d61281c7e279e0d4b4b', 132115455, 79321, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '04357cb0d3d9267b5304c151b7e371ac136a8a476e1fac522171b03946bc924af201f309284adc757cdbf3cb2a9ffeaecf060b2a47c7379ac59dbc7399d5de09', '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377');
2020-09-04T04:14:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:14:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:14:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
  height: 78384,
  prevBlockId: 'fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1',
  pointId: '76d33feeb7a028c2857eda47165040f25c91461530119d61281c7e279e0d4b4b',
  timestamp: 132115455,
  pointHeight: 79321,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '04357cb0d3d9267b5304c151b7e371ac136a8a476e1fac522171b03946bc924af201f309284adc757cdbf3cb2a9ffeaecf060b2a47c7379ac59dbc7399d5de09',
  id: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377' }
2020-09-04T04:14:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377 height: 78384
2020-09-04T04:14:20+0530 <info> round.js:66 () New dapp block id: 6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377 height: 78384 via point: 79321
2020-09-04T04:14:20+0530 <debug> sequence.js:1 (i) Main sequence out 14 func 
2020-09-04T04:14:27+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 15 func 
2020-09-04T04:14:27+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79321 }
2020-09-04T04:14:27+0530 <debug> sequence.js:1 (i) Main sequence out 15 func 
2020-09-04T04:14:27+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 16 func 
2020-09-04T04:14:27+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-04T04:14:27+0530 <debug> sequence.js:1 (i) Main sequence out 16 func 
2020-09-04T04:14:27+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-04T04:14:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4","height":78384,"prevBlockId":"fb1d1b9f3bdd447bf23bb8f873a73c1a83d09876e0676fa027c15cfe7753b4f1","pointId":"76d33feeb7a028c2857eda47165040f25c91461530119d61281c7e279e0d4b4b","timestamp":132115455,"pointHeight":79321,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"04357cb0d3d9267b5304c151b7e371ac136a8a476e1fac522171b03946bc924af201f309284adc757cdbf3cb2a9ffeaecf060b2a47c7379ac59dbc7399d5de09","id":"6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377"}, event = {"topic":"point","message":{"id":"a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d","height":79322}}
2020-09-04T04:14:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 17 func 
2020-09-04T04:14:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-04T04:14:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-04T04:14:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-04T04:14:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-04T04:14:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-04T04:14:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-04T04:14:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-04T04:14:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78385,
  prevBlockId: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
  pointId: 'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d',
  timestamp: 132115470,
  pointHeight: 79322,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b',
  id: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c' } { local: true,
  broadcast: true,
  votes: 
   { height: 78385,
     id: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-04T04:14:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78385
2020-09-04T04:14:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-04T04:14:30+0530 <debug> blocks.js:363 (Blocks.<anonymous>) ----------------------on round end-----------------------
2020-09-04T04:14:30+0530 <debug> blocks.js:363 (Blocks.<anonymous>) app.delegate.length 5
2020-09-04T04:14:30+0530 <debug> fee-pool.js:1 (e.value) fee pool get fees MapIterator {
  [ 'round:582,currency:BEL',
  { round: 582, currency: 'BEL', amount: '0' } ],
  [ 'round:2132,currency:BEL',
  { round: 2132, currency: 'BEL', amount: '0' } ],
  [ 'round:2133,currency:BEL',
  { round: 2133, currency: 'BEL', amount: '0' } ],
  [ 'round:2142,currency:BEL',
  { round: 2142, currency: 'BEL', amount: '0' } ],
  [ 'round:2146,currency:BEL',
  { round: 2146, currency: 'BEL', amount: '0' } ],
  [ 'round:2179,currency:BEL',
  { round: 2179, currency: 'BEL', amount: '0' } ],
  [ 'round:2181,currency:BEL',
  { round: 2181, currency: 'BEL', amount: '0' } ],
  [ 'round:2182,currency:BEL',
  { round: 2182, currency: 'BEL', amount: '0' } ],
  [ 'round:2317,currency:BEL',
  { round: 2317, currency: 'BEL', amount: '0' } ],
  [ 'round:2318,currency:BEL',
  { round: 2318, currency: 'BEL', amount: '0' } ],
  [ 'round:2521,currency:BEL',
  { round: 2521, currency: 'BEL', amount: '0' } ],
  [ 'round:2523,currency:BEL',
  { round: 2523, currency: 'BEL', amount: '0' } ],
  [ 'round:2524,currency:BEL',
  { round: 2524, currency: 'BEL', amount: '0' } ],
  [ 'round:2525,currency:BEL',
  { round: 2525, currency: 'BEL', amount: '0' } ],
  [ 'round:2526,currency:BEL',
  { round: 2526, currency: 'BEL', amount: '0' } ],
  [ 'round:2527,currency:BEL',
  { round: 2527, currency: 'BEL', amount: '0' } ],
  [ 'round:2530,currency:BEL',
  { round: 2530, currency: 'BEL', amount: '0' } ],
  [ 'round:2531,currency:BEL',
  { round: 2531, currency: 'BEL', amount: '0' } ],
  [ 'round:2532,currency:BEL',
  { round: 2532, currency: 'BEL', amount: '0' } ],
  [ 'round:3198,currency:BEL',
  { round: 3198, currency: 'BEL', amount: '0' } ],
  [ 'round:5486,currency:BEL',
  { round: 5486, currency: 'BEL', amount: '0' } ],
  [ 'round:5499,currency:BEL',
  { round: 5499, currency: 'BEL', amount: '0' } ],
  [ 'round:5520,currency:BEL',
  { round: 5520, currency: 'BEL', amount: '0' } ],
  [ 'round:5522,currency:BEL',
  { round: 5522, currency: 'BEL', amount: '0' } ],
  [ 'round:5628,currency:BEL',
  { round: 5628, currency: 'BEL', amount: '0' } ],
  [ 'round:14898,currency:BEL',
  { round: 14898, currency: 'BEL', amount: '0' } ],
  [ 'round:14899,currency:BEL',
  { round: 14899, currency: 'BEL', amount: '0' } ],
  [ 'round:14900,currency:BEL',
  { round: 14900, currency: 'BEL', amount: '0' } ],
  [ 'round:14901,currency:BEL',
  { round: 14901, currency: 'BEL', amount: '0' } ],
  [ 'round:14929,currency:BEL',
  { round: 14929, currency: 'BEL', amount: '0' } ],
  [ 'round:14931,currency:BEL',
  { round: 14931, currency: 'BEL', amount: '0' } ],
  [ 'round:14932,currency:BEL',
  { round: 14932, currency: 'BEL', amount: '0' } ],
  [ 'round:14933,currency:BEL',
  { round: 14933, currency: 'BEL', amount: '0' } ],
  [ 'round:14934,currency:BEL',
  { round: 14934, currency: 'BEL', amount: '0' } ],
  [ 'round:14935,currency:BEL',
  { round: 14935, currency: 'BEL', amount: '0' } ],
  [ 'round:14936,currency:BEL',
  { round: 14936, currency: 'BEL', amount: '0' } ],
  [ 'round:14939,currency:BEL',
  { round: 14939, currency: 'BEL', amount: '0' } ],
  [ 'round:14940,currency:BEL',
  { round: 14940, currency: 'BEL', amount: '0' } ],
  [ 'round:14941,currency:BEL',
  { round: 14941, currency: 'BEL', amount: '0' } ] } 15677
2020-09-04T04:14:30+0530 <debug> blocks.js:363 (Blocks.<anonymous>) round fees Map { _c: Map {} }
2020-09-04T04:14:30+0530 <debug> blocks.js:368 (Blocks.<anonymous>) fees distributes Map { _c: Map {} } Map { _c: Map {} }
2020-09-04T04:14:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-04T04:14:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-04T04:14:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78385, '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377', 'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d', 132115470, 79322, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b', 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c');
2020-09-04T04:14:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-04T04:14:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-04T04:14:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78385,
  prevBlockId: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
  pointId: 'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d',
  timestamp: 132115470,
  pointHeight: 79322,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b',
  id: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c' }
2020-09-04T04:14:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c height: 78385
2020-09-04T04:14:30+0530 <info> round.js:66 () New dapp block id: cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c height: 78385 via point: 79322
2020-09-04T04:14:30+0530 <debug> sequence.js:1 (i) Main sequence out 17 func 
