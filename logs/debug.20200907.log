2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model account.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model block.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model department.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model template.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-07T23:56:52+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-07T23:56:52+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-07T23:56:56+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-07T23:56:57+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-07T23:56:57+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-07T23:56:57+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-07T23:56:57+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-07T23:56:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-07T23:56:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-07T23:56:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-07T23:56:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-07T23:56:58+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-07T23:56:58+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-07T23:56:58+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-07T23:56:58+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78385
2020-09-07T23:56:58+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78385 and "blocks"."_deleted_" = 0; [ [ 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
    '132115470',
    '78385',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
    'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d',
    '79322',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b',
    '0' ] ]
2020-09-07T23:56:58+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
  timestamp: 132115470,
  height: 78385,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
  pointId: 'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d',
  pointHeight: 79322,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b',
  count: 0 }
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-07T23:56:58+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-07T23:56:58+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-07T23:56:58+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-07T23:56:58+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79323 }
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-07T23:56:58+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-07T23:56:58+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-07T23:56:58+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-07T23:56:58+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employees
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getToken
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /contracts
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /transfers
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /totals1
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuers
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /department/define
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /department/get
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-07T23:56:58+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model account.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model block.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model department.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model template.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-07T23:57:19+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-07T23:57:19+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-07T23:57:20+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-07T23:57:20+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-07T23:57:20+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-07T23:57:20+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-07T23:57:20+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-07T23:57:20+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-07T23:57:20+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-07T23:57:20+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78385
2020-09-07T23:57:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78385 and "blocks"."_deleted_" = 0; [ [ 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
    '132115470',
    '78385',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
    'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d',
    '79322',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b',
    '0' ] ]
2020-09-07T23:57:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
  timestamp: 132115470,
  height: 78385,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: '6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377',
  pointId: 'a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d',
  pointHeight: 79322,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b',
  count: 0 }
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-07T23:57:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-07T23:57:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-07T23:57:20+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-07T23:57:20+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79324 }
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-07T23:57:20+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-07T23:57:20+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-07T23:57:20+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-07T23:57:20+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-07T23:57:20+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c","timestamp":132115470,"height":78385,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"6c2b8bf6b41f5c78ffb91e2998dc980f30713dfc34f4bf6619b64e33d1864377","pointId":"a9ac0d9829fc03884d3aeea3730b393cd4e4055b00f470090f12a4ffab685e3d","pointHeight":79322,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"9e9acf69f69e48524c6a41babddfd28a75312aa5a095aaab21fade6c94108fcc462af742c41bc77ac3f3a82d3e95f2e026f53c3e2aa9ac202d617c8bd1687c0b","count":0}, event = {"topic":"point","message":{"id":"69276e641db0483045c4c764249803e3f16ee1562a9974f7c58a1e67289b455f","height":79325}}
2020-09-07T23:57:20+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-07T23:57:20+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employees
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getToken
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /contracts
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /transfers
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /totals1
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuers
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-07T23:57:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-07T23:57:20+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /department/define
2020-09-07T23:57:20+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /department/get
2020-09-07T23:57:20+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-07T23:57:20+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-07T23:57:20+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-07T23:57:20+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78386,
  prevBlockId: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
  pointId: '69276e641db0483045c4c764249803e3f16ee1562a9974f7c58a1e67289b455f',
  timestamp: 132445635,
  pointHeight: 79325,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'b937e1b8bc608fc81a180017ca9c88c7d08ee716b28992d5d7d7ebacd082bc69657771daf312d83cf1c870e3dfc815215115770ef879e2910938f5e45dc69b00',
  id: 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3' } { local: true,
  broadcast: true,
  votes: 
   { height: 78386,
     id: 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-07T23:57:20+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78386
2020-09-07T23:57:20+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-07T23:57:20+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-07T23:57:20+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-07T23:57:20+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78386, 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c', '69276e641db0483045c4c764249803e3f16ee1562a9974f7c58a1e67289b455f', 132445635, 79325, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'b937e1b8bc608fc81a180017ca9c88c7d08ee716b28992d5d7d7ebacd082bc69657771daf312d83cf1c870e3dfc815215115770ef879e2910938f5e45dc69b00', 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3');
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-07T23:57:20+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-07T23:57:20+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-07T23:57:20+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-07T23:57:20+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78386,
  prevBlockId: 'cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c',
  pointId: '69276e641db0483045c4c764249803e3f16ee1562a9974f7c58a1e67289b455f',
  timestamp: 132445635,
  pointHeight: 79325,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'b937e1b8bc608fc81a180017ca9c88c7d08ee716b28992d5d7d7ebacd082bc69657771daf312d83cf1c870e3dfc815215115770ef879e2910938f5e45dc69b00',
  id: 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3' }
2020-09-07T23:57:20+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3 height: 78386
2020-09-07T23:57:20+0530 <info> round.js:66 () New dapp block id: a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3 height: 78386 via point: 79325
2020-09-07T23:57:20+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-07T23:57:30+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"delegate":"7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00","height":78386,"prevBlockId":"cc4cf5279f6a76729bb3cfaca978435a14a34e68620831afd6724685f3e7517c","pointId":"69276e641db0483045c4c764249803e3f16ee1562a9974f7c58a1e67289b455f","timestamp":132445635,"pointHeight":79325,"count":0,"transactions":[],"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","payloadLength":0,"signature":"b937e1b8bc608fc81a180017ca9c88c7d08ee716b28992d5d7d7ebacd082bc69657771daf312d83cf1c870e3dfc815215115770ef879e2910938f5e45dc69b00","id":"a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3"}, event = {"topic":"point","message":{"id":"5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6","height":79326}}
2020-09-07T23:57:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-07T23:57:30+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-07T23:57:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-07T23:57:30+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-07T23:57:30+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-07T23:57:30+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-07T23:57:30+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-07T23:57:30+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-07T23:57:30+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78387,
  prevBlockId: 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3',
  pointId: '5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6',
  timestamp: 132445650,
  pointHeight: 79326,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '2576928e293c175b5f563dce6d640ad3259dd4b8f6196a9c44463a512853d4aa931886b99c036b5de1690d5efcb6346f8aa1f2468cc11a1302de05d5b3c0c50d',
  id: '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c' } { local: true,
  broadcast: true,
  votes: 
   { height: 78387,
     id: '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-07T23:57:30+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78387
2020-09-07T23:57:30+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-07T23:57:30+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-07T23:57:30+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-07T23:57:30+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4', 78387, 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3', '5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6', 132445650, 79326, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, '2576928e293c175b5f563dce6d640ad3259dd4b8f6196a9c44463a512853d4aa931886b99c036b5de1690d5efcb6346f8aa1f2468cc11a1302de05d5b3c0c50d', '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c');
2020-09-07T23:57:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-07T23:57:30+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 6 func 
2020-09-07T23:57:30+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-07T23:57:30+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-07T23:57:30+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  height: 78387,
  prevBlockId: 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3',
  pointId: '5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6',
  timestamp: 132445650,
  pointHeight: 79326,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: '2576928e293c175b5f563dce6d640ad3259dd4b8f6196a9c44463a512853d4aa931886b99c036b5de1690d5efcb6346f8aa1f2468cc11a1302de05d5b3c0c50d',
  id: '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c' }
2020-09-07T23:57:30+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c height: 78387
2020-09-07T23:57:30+0530 <info> round.js:66 () New dapp block id: 73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c height: 78387 via point: 79326
2020-09-07T23:57:30+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-07T23:57:30+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79326 }
2020-09-07T23:57:30+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-07T23:57:30+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-07T23:57:30+0530 <debug> sequence.js:1 (i) Main sequence out 6 func 
2020-09-07T23:57:30+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model account.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'accounts',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       primary_key: true,
       not_null: true },
     { name: 'str1', type: 'String', length: 256, index: true },
     { name: 'str2', type: 'String', length: 256 },
     { name: 'str3', type: 'String', length: 256 },
     { name: 'str4', type: 'String', length: 256 },
     { name: 'str5', type: 'String', length: 256 },
     { name: 'num1', type: 'Number' },
     { name: 'num2', type: 'Number' },
     { name: 'num3', type: 'Number' },
     { name: 'num4', type: 'Number' },
     { name: 'num5', type: 'Number' },
     { name: 'bigint1', type: 'BigInt' },
     { name: 'bigint2', type: 'BigInt' },
     { name: 'bigint3', type: 'BigInt' },
     { name: 'bigint4', type: 'BigInt' },
     { name: 'bigint5', type: 'BigInt' },
     { name: 'text1', type: 'Text' },
     { name: 'text2', type: 'Text' },
     { name: 'text3', type: 'Text' },
     { name: 'text4', type: 'Text' },
     { name: 'text5', type: 'Text' } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model balance.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'balances',
  tableFields: 
   [ { name: 'address',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'balance', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model block.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'blocks',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true },
     { name: 'height', type: 'BigInt', not_null: true, index: true },
     { name: 'payloadLength', type: 'BigInt', not_null: true },
     { name: 'payloadHash',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'prevBlockId', type: 'String', length: 64 },
     { name: 'pointId', type: 'String', length: 64 },
     { name: 'pointHeight', type: 'BigInt' },
     { name: 'delegate',
       type: 'String',
       length: 64,
       not_null: true,
       index: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'count', type: 'BigInt', not_null: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model deposit.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'deposits',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'srcId',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model round-fee.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'round_fees',
  tableFields: 
   [ { name: 'round', type: 'Number', not_null: true, index: true },
     { name: 'currency', type: 'String', length: 30, not_null: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model transaction.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transactions',
  tableFields: 
   [ { name: 'id',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'timestamp', type: 'BigInt', not_null: true, index: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'senderPublicKey',
       type: 'String',
       length: 64,
       not_null: true },
     { name: 'fee', type: 'String', length: 50, not_null: true },
     { name: 'signature', type: 'String', length: 128, not_null: true },
     { name: 'type', type: 'Number', not_null: true, index: true },
     { name: 'args', type: 'Text' },
     { name: 'height', type: 'BigInt', not_null: true, index: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model transfer.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'transfers',
  tableFields: 
   [ { name: 'tid',
       type: 'String',
       length: 64,
       not_null: true,
       unique: true,
       primary_key: true },
     { name: 'senderId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'recipientId',
       type: 'String',
       length: 50,
       not_null: true,
       index: true },
     { name: 'currency',
       type: 'String',
       length: 30,
       not_null: true,
       index: true },
     { name: 'amount', type: 'String', length: 50, not_null: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model variable.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { table: 'variables',
  tableFields: 
   [ { name: 'key',
       type: 'String',
       length: 256,
       not_null: true,
       primary_key: true },
     { name: 'value', type: 'String', length: 256, not_null: true } ],
  type: 'create' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model activity.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'activitys',
  fields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'activityMessage', type: 'String', length: 255 },
     { name: 'pid', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'atype', type: 'String', length: 255 } ],
  table: 'activitys' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model authdept.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authdepts',
  fields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'level', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authdepts' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model authorizer.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'authorizers',
  fields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'aid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'authorizers' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model cs.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'css',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'css' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model customTemplate.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'customtemplates' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model customtemplate.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'customtemplates',
  fields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 10000 },
     { name: 'template', type: 'String', length: 10000 } ],
  table: 'customtemplates' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model department.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'departments',
  fields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'did', type: 'String', length: 255, primary_key: true },
     { name: 'name', type: 'String', length: 255 },
     { name: 'levels', type: 'Number', length: 255 } ],
  table: 'departments' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model deplevel.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'deplevels',
  fields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255, primary_key: true },
     { name: 'department', type: 'String', length: 255 },
     { name: 'designation', type: 'String', length: 255 },
     { name: 'priority', type: 'Number', length: 255 } ],
  table: 'deplevels' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model earning.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'earnings',
  fields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'paysliplink', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'ownerEarning', type: 'String', length: 255 },
     { name: 'adminEarning', type: 'String', length: 255 },
     { name: 'orderId', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'earnings' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model employee.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'employees',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'walletAddress', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'employees' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model issudept.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issudepts',
  fields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issudepts' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model issue.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issues',
  fields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255, primary_key: true },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'hash', type: 'String', length: 255 },
     { name: 'sign', type: 'String', length: 255 },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'status', type: 'String', length: 255 },
     { name: 'authLevel', type: 'Number', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'transactionId', type: 'String', length: 255 },
     { name: 'did', type: 'String', length: 255 },
     { name: 'data', type: 'String', length: 255 } ],
  table: 'issues' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model issuelimit.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuelimits',
  fields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'name', type: 'String', length: 255 },
     { name: 'value', type: 'Number', length: 255 },
     { name: 'expirydate', type: 'Number', length: 255 } ],
  table: 'issuelimits' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model issuer.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'issuers',
  fields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'iid', type: 'String', length: 255, primary_key: true },
     { name: 'publickey', type: 'String', length: 255 },
     { name: 'email', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 },
     { name: 'deleted', type: 'String', length: 255 } ],
  table: 'issuers' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model payment.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'payments',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'orderid', type: 'String', length: 255 } ],
  table: 'payments' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model paysliplink.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'paysliplinks',
  fields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'link', type: 'String', length: 255 },
     { name: 'payed', type: 'String', length: 255 },
     { name: 'validity', type: 'String', length: 255 } ],
  table: 'paysliplinks' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model pendingemp.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'pendingemps',
  fields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  type: 'create',
  tableFields: 
   [ { name: 'email', type: 'String', length: 255 },
     { name: 'empid', type: 'String', length: 255 },
     { name: 'name', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 1000 },
     { name: 'iid', type: 'String', length: 1000 },
     { name: 'extra', type: 'String', length: 1000 },
     { name: 'token', type: 'String', length: 255 },
     { name: 'department', type: 'String', length: 255 },
     { name: 'timestamp', type: 'Number' } ],
  table: 'pendingemps' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model rejected.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'rejecteds',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'aid', type: 'String', length: 255 },
     { name: 'iid', type: 'String', length: 255 },
     { name: 'reason', type: 'String', length: 255 },
     { name: 'timestampp', type: 'Number', length: 255 } ],
  table: 'rejecteds' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model requester.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'requesters',
  fields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'assetId', type: 'String', length: 255 },
     { name: 'requesterWalletAddress', type: 'String', length: 255 },
     { name: 'ownerWalletAddress', type: 'String', length: 255 },
     { name: 'issuerWalletAddress', type: 'String', length: 255 },
     { name: 'ownerStatus', type: 'Boolean', default: false },
     { name: 'issuerStatus', type: 'Boolean', default: false },
     { name: 'trsId', type: 'String', length: 255 } ],
  table: 'requesters' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model setting.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'settings',
  fields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'id', type: 'String', length: 255 },
     { name: 'fields', type: 'String', length: 255 },
     { name: 'identity', type: 'String', length: 255 } ],
  table: 'settings' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model template.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'templates',
  fields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  type: 'create',
  tableFields: 
   [ { name: 'pid', type: 'String', length: 255 },
     { name: 'template', type: 'String', length: 10000000 } ],
  table: 'templates' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model testing.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'testings',
  fields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'test', type: 'String', length: 255 },
     { name: 'value', type: 'String', length: 255 } ],
  table: 'testings' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading model transactiondetail.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.value) sync schema { name: 'transactiondetails',
  fields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  type: 'create',
  tableFields: 
   [ { name: 'transactionId', type: 'String', length: 255 },
     { name: 'balance', type: 'String', length: 255 } ],
  table: 'transactiondetails' }
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract core.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract index.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract domain.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract issuer.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract owner.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract payroll.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract register.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract requester.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading contract temp.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface basic.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface authController.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface belfricsAdmin.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface certsIssued.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface contractcalls.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface domain.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface getter.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface groups.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface issuer.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface owner.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface populate.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface queries.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface register.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface registrations.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface requester.js
2020-09-07T23:59:42+0530 <info> shovel2.js:1 () loading interface testing.js
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "balances"."address", "balances"."currency", "balances"."balance" from "balances" where "balances"."_deleted_" = 0;
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "variables"."key", "variables"."value" from "variables" where "variables"."_deleted_" = 0;
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "round_fees"."round", "round_fees"."currency", "round_fees"."amount" from "round_fees" where "round_fees"."_deleted_" = 0;
2020-09-07T23:59:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AN1yKK47P3MtD5ZgHYoncGQ1gCn4p2vGAC
2020-09-07T23:59:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AGeeCmSVLDNbtMqqpJchQZakchwzpuje1P
2020-09-07T23:59:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: A7NWaYUkpa543hdTsfw57AoZAgCBr2NFY6
2020-09-07T23:59:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: ABU1G2pQFMGa7c1GiAPYCQuUhiPHdvCSB2
2020-09-07T23:59:42+0530 <info> round.js:319 (Function.Round.onBind) Forging enable on account: AG1A3ojeLAMZySaZWTkg49jcoVCV7FCKXF
2020-09-07T23:59:42+0530 <info> index.js:1 (Sandbox.<anonymous>) Initialize complete
2020-09-07T23:59:42+0530 <info> blocks.js:846 (Function.<anonymous>) app.meta { name: 'certificat2',
  description: 'certificate2 dapp test',
  tags: '',
  link: 'http://localhost:8080/sendzip2/JaAsGpOy.zip',
  type: 0,
  category: 1,
  icon: 'http://o7dyh3w0x.bkt.clouddn.com/hello.png',
  delegates: 
   [ 'db18d5799944030f76b6ce0879b1ca4b0c2c1cee51f53ce9b43f78259950c2fd',
     '590e28d2964b0aa4d7c7b98faee4676d467606c6761f7f41f99c52bb4813b5e4',
     'bfe511158d674c3a1e21111223a49770bee93611d998e88a5d2ea3145de2b68b',
     '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
     '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4' ],
  unlockDelegates: 3,
  transactionId: 'd009aab18401b94b8628d27bf7584004d4857b55e14bf1f6c4becf83fa92efc6' }
2020-09-07T23:59:42+0530 <info> blocks.js:848 (Function.<anonymous>) Blocks found: 78387
2020-09-07T23:59:42+0530 <debug> orm.js:1 (e.<anonymous>) Model#findOne select "blocks"."id", "blocks"."timestamp", "blocks"."height", "blocks"."payloadLength", "blocks"."payloadHash", "blocks"."prevBlockId", "blocks"."pointId", "blocks"."pointHeight", "blocks"."delegate", "blocks"."signature", "blocks"."count" from "blocks" where "blocks"."height" = 78387 and "blocks"."_deleted_" = 0; [ [ '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c',
    '132445650',
    '78387',
    '0',
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
    'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3',
    '5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6',
    '79326',
    '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
    '2576928e293c175b5f563dce6d640ad3259dd4b8f6196a9c44463a512853d4aa931886b99c036b5de1690d5efcb6346f8aa1f2468cc11a1302de05d5b3c0c50d',
    '0' ] ]
2020-09-07T23:59:42+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { id: '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c',
  timestamp: 132445650,
  height: 78387,
  payloadLength: 0,
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  prevBlockId: 'a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3',
  pointId: '5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6',
  pointHeight: 79326,
  delegate: '452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4',
  signature: '2576928e293c175b5f563dce6d640ad3259dd4b8f6196a9c44463a512853d4aa931886b99c036b5de1690d5efcb6346f8aa1f2468cc11a1302de05d5b3c0c50d',
  count: 0 }
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /user/exist
2020-09-07T23:59:42+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 1 func 
2020-09-07T23:59:42+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 2 func 
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /userlogin
2020-09-07T23:59:42+0530 <info> api.js:1 (Immediate.<anonymous>) app set ready success
2020-09-07T23:59:42+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79327 }
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /usersignup
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /registerEmployeeToken
2020-09-07T23:59:42+0530 <debug> sequence.js:1 (i) Main sequence out 1 func 
2020-09-07T23:59:42+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslips/employee/issued
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/getIssuedByPid
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/returnHash
2020-09-07T23:59:42+0530 <debug> sequence.js:1 (i) Main sequence out 2 func 
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employee/payslips/statistic
2020-09-07T23:59:42+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/statistic
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/statistic2
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/rejecteds
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getPayedPayslip
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /isLaunched
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getAssetTemplate
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employees
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employeeData
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslips/verify
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getToken
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/confirmedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/initialIssue
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizers/pendingSigns
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/getPayslip
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/authorize
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/authorizeMultiple
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/reject
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/rejectMultiple
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /searchEmployee
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /sharePayslips
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /registerEmployee
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslips/verifyMultiple
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslips/sentForAuthorization
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/issuedPayslips
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /registerUser/
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /department/assignAuthorizers
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getActivities
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/payment
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /generatePayslipLink
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /centralserver/addIssuelimits
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getIssueLimit
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getAddressByEmployeeEmail
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/asset/details
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /contracts
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /transfers
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/workDetails
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/getContracts
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/setContractFees
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/setContractFee
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /rechargeDetails
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/getTransactionDetails
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/getOwnerEarnings
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /admin/incomes
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /totalCertsIssued
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /totalEmployee
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employee/details
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /recentIssued
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getEmployees
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getEmployeeById
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getPendingAuthorizationCount
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employee/id/exists
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /assets/:status/count
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /assets/:status
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /recipients/count
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/issuedAssets/monthyear/count
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/authorizedAssets/month/count
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuedAssets/address
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issueTransactionCall
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issueTransactionCallMultiple
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /useSuperAdminsBalance
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /domain/:address
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /domain/suffix/:suffix
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/counts
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/pendingIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/rejectedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/statistic/issuedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/statistic/counts
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/statistic/signedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/statistic/rejectedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/counts
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/pendingAuthorization
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /superuser/statistic/rejectedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /receipient/email/exists
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /statistics/monthlyCounts
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /totals1
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuers
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuers/data
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizers
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizers/data
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuers/statistics
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizers/statistics
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/authorizedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/statistic
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizers/getId
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employees/getId
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuers/getId
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizers/remove
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuers/remove
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /department/define
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /department/get
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /customFields/define
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /customFields/get
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employee/remove
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/data
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/data/employeesRegistered
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/data/issuedPayslips
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /authorizer/data
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/issued
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/initiated
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /payslip/getSigns
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getBanks
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /employees/getDesignations
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /superuser/statistics
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/employeesRegistered
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getDepartments/authorizers
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /department/assets
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /getDepartment/authorizers
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issues/rejected/reasons
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /customTemplateDefine
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /customTemplateGet
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/verifyViewRequest
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /issuer/track/assets/status
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /owner/verifyViewRequest
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /owner/track/assets/status
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /generateEmployees
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /generateAndIssuePayslips
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/employees
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/authorizers/pendingSigns
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/departments/topIssued
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/department/assets
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingIssues2
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/pendingAuthorization2
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/superuser/statistic/rejectedIssues2
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/pendingIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/issuedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/issuer/statistic/rejectedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/signedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/authorizer/statistic/rejectedIssues
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/employees2
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/member/exists
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /rejecteds/reasons/count
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/issuer/departments/ranks
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/authorizer/departments/ranks
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /query/department/issuedCount
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /requester/viewRequest
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface get /requester/list/assets
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /requester/track/assets/status
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /requester/asset/get
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /testingLocker
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /anotherAPI
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /testingUpdateCondition
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /enterTestdata
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /datatablestesting
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /pagenationTesting
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /populateEmployees
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /populateBkvs
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /testingescapes
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /gettingescapes
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /testingDatabaseAccess
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /mockEmployeeRegistration
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /mockIssuerRegistration
2020-09-07T23:59:42+0530 <info> api.js:1 () register app interface post /masterSecret
2020-09-07T23:59:50+0530 <debug> blocks.js:742 (Function.Blocks.onMessage) Blocks#onMessage last block = {"id":"73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c","timestamp":132445650,"height":78387,"payloadLength":0,"payloadHash":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","prevBlockId":"a78b2537e1375d3650fab57d52047e49a48c4529d99d3aaeddedb7b9571fbfd3","pointId":"5cef9b589d8233a6da8758a4161ddc53f0fdcd7484dc3fb32e331d41007e7fc6","pointHeight":79326,"delegate":"452df9213aedb3b9fed6db3e2ea9f49d3db226e2dac01828bc3dcd73b7a953b4","signature":"2576928e293c175b5f563dce6d640ad3259dd4b8f6196a9c44463a512853d4aa931886b99c036b5de1690d5efcb6346f8aa1f2468cc11a1302de05d5b3c0c50d","count":0}, event = {"topic":"point","message":{"id":"25b7f7e6d18f7ec8444630188ec175c6b895d0292d046cf95facf005709181b6","height":79328}}
2020-09-07T23:59:50+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 3 func 
2020-09-07T23:59:50+0530 <trace> round.js:89 (Object.<anonymous>) enter balanceSync ------------------------
2020-09-07T23:59:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."args" from "transactions" where "transactions"."type" = 1 and "transactions"."_deleted_" = 0 order by "transactions"."height" desc limit 1;
2020-09-07T23:59:50+0530 <debug> round.js:100 (Object.<anonymous>) balanceSync found deposit transactions: []
2020-09-07T23:59:50+0530 <debug> round.js:185 (Object.<anonymous>) get last withdrawal id {}
2020-09-07T23:59:50+0530 <debug> orm.js:1 (e.<anonymous>) Model#findAll select "transactions"."id", "transactions"."senderPublicKey", "transactions"."height", "transactions"."args" from "transactions" where "transactions"."height" > 0 and "transactions"."type" = 2 and "transactions"."_deleted_" = 0 order by "transactions"."height" asc;
2020-09-07T23:59:50+0530 <debug> round.js:211 (Object.<anonymous>) found inner withdrawal transactions []
2020-09-07T23:59:50+0530 <info> blocks.js:486 (Blocks.<anonymous>) Get active delegate keypairs len: 5
2020-09-07T23:59:50+0530 <debug> blocks.js:276 (Blocks.<anonymous>) processBlock block and options { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78388,
  prevBlockId: '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c',
  pointId: '25b7f7e6d18f7ec8444630188ec175c6b895d0292d046cf95facf005709181b6',
  timestamp: 132445785,
  pointHeight: 79328,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'fd9de7b756f0e0cccbc7394474df409b905949e18fdf698c4ca9141ef1ed9de912c66ac1765460c403a3e5965f55e19ce834bc12cfde3690952b3a1764199908',
  id: '078f1f6e67dab54a9f3b2a3ab8d75e965e9149bcc62a1ea5f67fa9da88f5c3c1' } { local: true,
  broadcast: true,
  votes: 
   { height: 78388,
     id: '078f1f6e67dab54a9f3b2a3ab8d75e965e9149bcc62a1ea5f67fa9da88f5c3c1',
     signatures: [ [Object], [Object], [Object], [Object], [Object] ] } }
2020-09-07T23:59:50+0530 <trace> blocks.js:412 (Blocks.saveBlock) Blocks#save height 78388
2020-09-07T23:59:50+0530 <trace> blocks.js:418 (Blocks.saveBlock) Blocks#save end
2020-09-07T23:59:50+0530 <trace> smartdb.js:1 (e.<anonymous>) enter commitBlock
2020-09-07T23:59:50+0530 <debug> smartdb.js:1 (e.<anonymous>) sql batchs size 1
2020-09-07T23:59:50+0530 <debug> smartdb.js:1 (e.<anonymous>) execute sql: insert into "blocks" ("delegate", "height", "prevBlockId", "pointId", "timestamp", "pointHeight", "count", "payloadHash", "payloadLength", "signature", "id") values ('7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00', 78388, '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c', '25b7f7e6d18f7ec8444630188ec175c6b895d0292d046cf95facf005709181b6', 132445785, 79328, 0, 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 0, 'fd9de7b756f0e0cccbc7394474df409b905949e18fdf698c4ca9141ef1ed9de912c66ac1765460c403a3e5965f55e19ce834bc12cfde3690952b3a1764199908', '078f1f6e67dab54a9f3b2a3ab8d75e965e9149bcc62a1ea5f67fa9da88f5c3c1');
2020-09-07T23:59:50+0530 <trace> smartdb.js:1 (e.<anonymous>) after commit transaction
2020-09-07T23:59:50+0530 <info> blocks.js:334 (Blocks.<anonymous>) Block applied correctly with 0 transactions
2020-09-07T23:59:50+0530 <trace> blocks.js:386 (Blocks.setLastBlock) Blocks#setLastBlock { delegate: '7bbf62931cf3c596591a580212631aff51d6bc0577c54769953caadb23f6ab00',
  height: 78388,
  prevBlockId: '73373615648d24fb390a7b629372e799a7dd8f5a55fe43d5444c48bd1215573c',
  pointId: '25b7f7e6d18f7ec8444630188ec175c6b895d0292d046cf95facf005709181b6',
  timestamp: 132445785,
  pointHeight: 79328,
  count: 0,
  transactions: [],
  payloadHash: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  payloadLength: 0,
  signature: 'fd9de7b756f0e0cccbc7394474df409b905949e18fdf698c4ca9141ef1ed9de912c66ac1765460c403a3e5965f55e19ce834bc12cfde3690952b3a1764199908',
  id: '078f1f6e67dab54a9f3b2a3ab8d75e965e9149bcc62a1ea5f67fa9da88f5c3c1' }
2020-09-07T23:59:50+0530 <info> blocks.js:496 (Blocks.<anonymous>) Forged new block id: 078f1f6e67dab54a9f3b2a3ab8d75e965e9149bcc62a1ea5f67fa9da88f5c3c1 height: 78388
2020-09-07T23:59:50+0530 <info> round.js:66 () New dapp block id: 078f1f6e67dab54a9f3b2a3ab8d75e965e9149bcc62a1ea5f67fa9da88f5c3c1 height: 78388 via point: 79328
2020-09-07T23:59:50+0530 <debug> sequence.js:1 (i) Main sequence out 3 func 
2020-09-07T23:59:52+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 4 func 
2020-09-07T23:59:52+0530 <info> sync.js:1 (Immediate.<anonymous>) get main block height { height: 79328 }
2020-09-07T23:59:52+0530 <debug> sequence.js:1 (i) Main sequence out 4 func 
2020-09-07T23:59:52+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#blockSync timer Failed to get blocks height: No peers in db
2020-09-07T23:59:52+0530 <debug> sequence.js:1 (Sequence.add) Main sequence in 5 func 
2020-09-07T23:59:52+0530 <debug> sequence.js:1 (i) Main sequence out 5 func 
2020-09-07T23:59:52+0530 <error> sync.js:1 (Immediate.<anonymous>) Sync#transactionsSync timer No peers in db
